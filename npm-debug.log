0 info it worked if it ends with ok
1 verbose cli [ '/usr/bin/node',
1 verbose cli   '/usr/bin/npm',
1 verbose cli   'install',
1 verbose cli   '--save-dev',
1 verbose cli   'sass-loader' ]
2 info using npm@1.4.28
3 info using node@v0.10.37
4 verbose node symlink /usr/bin/node
5 verbose readDependencies using package.json deps
6 verbose cache add [ 'sass-loader', null ]
7 verbose cache add name=undefined spec="sass-loader" args=["sass-loader",null]
8 verbose parsed url { protocol: null,
8 verbose parsed url   slashes: null,
8 verbose parsed url   auth: null,
8 verbose parsed url   host: null,
8 verbose parsed url   port: null,
8 verbose parsed url   hostname: null,
8 verbose parsed url   hash: null,
8 verbose parsed url   search: null,
8 verbose parsed url   query: null,
8 verbose parsed url   pathname: 'sass-loader',
8 verbose parsed url   path: 'sass-loader',
8 verbose parsed url   href: 'sass-loader' }
9 silly lockFile 1f82baf5-sass-loader sass-loader
10 verbose lock sass-loader /home/supernever/.npm/1f82baf5-sass-loader.lock
11 silly lockFile 1f82baf5-sass-loader sass-loader
12 silly lockFile 1f82baf5-sass-loader sass-loader
13 verbose addNamed [ 'sass-loader', '' ]
14 verbose addNamed [ null, '*' ]
15 silly lockFile eb6111f0-sass-loader sass-loader@
16 verbose lock sass-loader@ /home/supernever/.npm/eb6111f0-sass-loader.lock
17 silly addNameRange { name: 'sass-loader', range: '*', hasData: false }
18 verbose request where is /sass-loader
19 verbose request registry https://registry.npmjs.org/
20 verbose request id 9d30e7cb5b3fa93e
21 verbose url raw /sass-loader
22 verbose url resolving [ 'https://registry.npmjs.org/', './sass-loader' ]
23 verbose url resolved https://registry.npmjs.org/sass-loader
24 verbose request where is https://registry.npmjs.org/sass-loader
25 info trying registry request attempt 1 at 03:05:58
26 verbose etag "E0RMSYB6O7MNDS3XB1ANZ64B2"
27 http GET https://registry.npmjs.org/sass-loader
28 http 304 https://registry.npmjs.org/sass-loader
29 silly registry.get cb [ 304,
29 silly registry.get   { date: 'Tue, 17 May 2016 19:06:04 GMT',
29 silly registry.get     via: '1.1 varnish',
29 silly registry.get     'cache-control': 'max-age=300',
29 silly registry.get     etag: '"E0RMSYB6O7MNDS3XB1ANZ64B2"',
29 silly registry.get     age: '249',
29 silly registry.get     connection: 'keep-alive',
29 silly registry.get     'x-served-by': 'cache-itm7426-ITM',
29 silly registry.get     'x-cache': 'HIT',
29 silly registry.get     'x-cache-hits': '5',
29 silly registry.get     'x-timer': 'S1463511964.419437,VS0,VE0',
29 silly registry.get     vary: 'Accept-Encoding' } ]
30 verbose etag https://registry.npmjs.org/sass-loader from cache
31 silly addNameRange number 2 { name: 'sass-loader', range: '*', hasData: true }
32 silly addNameRange versions [ 'sass-loader',
32 silly addNameRange   [ '0.0.1',
32 silly addNameRange     '0.0.2',
32 silly addNameRange     '0.1.0',
32 silly addNameRange     '0.1.1',
32 silly addNameRange     '0.2.0',
32 silly addNameRange     '0.3.0',
32 silly addNameRange     '0.3.1',
32 silly addNameRange     '0.4.0-beta.1',
32 silly addNameRange     '0.4.0',
32 silly addNameRange     '0.4.1',
32 silly addNameRange     '0.4.2',
32 silly addNameRange     '0.5.0',
32 silly addNameRange     '1.0.0',
32 silly addNameRange     '1.0.1',
32 silly addNameRange     '0.6.0',
32 silly addNameRange     '1.0.2',
32 silly addNameRange     '1.0.3',
32 silly addNameRange     '1.0.4',
32 silly addNameRange     '2.0.0',
32 silly addNameRange     '2.0.1',
32 silly addNameRange     '3.0.0',
32 silly addNameRange     '3.1.0',
32 silly addNameRange     '3.1.1',
32 silly addNameRange     '3.1.2',
32 silly addNameRange     '3.2.0' ] ]
33 verbose addNamed [ 'sass-loader', '3.2.0' ]
34 verbose addNamed [ '3.2.0', '3.2.0' ]
35 silly lockFile 66bb7dac-sass-loader-3-2-0 sass-loader@3.2.0
36 verbose lock sass-loader@3.2.0 /home/supernever/.npm/66bb7dac-sass-loader-3-2-0.lock
37 silly lockFile 66bb7dac-sass-loader-3-2-0 sass-loader@3.2.0
38 silly lockFile 66bb7dac-sass-loader-3-2-0 sass-loader@3.2.0
39 silly lockFile eb6111f0-sass-loader sass-loader@
40 silly lockFile eb6111f0-sass-loader sass-loader@
41 silly resolved [ { name: 'sass-loader',
41 silly resolved     version: '3.2.0',
41 silly resolved     description: 'Sass loader for webpack',
41 silly resolved     main: 'index.js',
41 silly resolved     scripts:
41 silly resolved      { 'create-spec': 'node test/tools/runCreateSpec.js',
41 silly resolved        pretest: 'node test/tools/runCreateSpec.js',
41 silly resolved        test: 'mocha -R spec',
41 silly resolved        posttest: 'jshint index.js test',
41 silly resolved        'test-bootstrap-sass': 'webpack-dev-server --config test/bootstrapSass/webpack.config.js --content-base ./test/bootstrapSass',
41 silly resolved        'test-source-map': 'webpack-dev-server --config test/sourceMap/webpack.config.js --content-base ./test/sourceMap',
41 silly resolved        'test-watch': 'webpack --config test/watch/webpack.config.js',
41 silly resolved        'test-hmr': 'webpack-dev-server --config test/hmr/webpack.config.js --content-base ./test/hmr --hot --inline',
41 silly resolved        'test-spec': 'mocha -R spec test/spec.test.js' },
41 silly resolved     keywords: [ 'sass', 'libsass', 'webpack', 'loader' ],
41 silly resolved     repository:
41 silly resolved      { type: 'git',
41 silly resolved        url: 'git://github.com/jtangelder/sass-loader.git' },
41 silly resolved     author: { name: 'J. Tangelder' },
41 silly resolved     license: 'MIT',
41 silly resolved     peerDependencies: { 'node-sass': '^3.4.2', webpack: '^1.12.6' },
41 silly resolved     dependencies:
41 silly resolved      { async: '^1.4.0',
41 silly resolved        'loader-utils': '^0.2.5',
41 silly resolved        'object-assign': '^4.0.1' },
41 silly resolved     devDependencies:
41 silly resolved      { 'bootstrap-sass': '^3.3.5',
41 silly resolved        'css-loader': '^0.23.0',
41 silly resolved        'enhanced-require': '^0.5.0-beta6',
41 silly resolved        'file-loader': '^0.8.4',
41 silly resolved        jshint: '^2.8.0',
41 silly resolved        mocha: '^2.3.4',
41 silly resolved        'node-sass': '3.4.2',
41 silly resolved        'raw-loader': '^0.5.1',
41 silly resolved        should: '^8.2.2',
41 silly resolved        'style-loader': '^0.13.0',
41 silly resolved        webpack: '^1.12.14',
41 silly resolved        'webpack-dev-server': '^1.7.0' },
41 silly resolved     gitHead: 'dc02a395877152a271e494265b7250a31c1745a1',
41 silly resolved     bugs: { url: 'https://github.com/jtangelder/sass-loader/issues' },
41 silly resolved     homepage: 'https://github.com/jtangelder/sass-loader#readme',
41 silly resolved     _id: 'sass-loader@3.2.0',
41 silly resolved     _shasum: 'b90ac6c71da27cfd6e7eda5409a5a803193c329b',
41 silly resolved     _from: 'sass-loader@',
41 silly resolved     _npmVersion: '3.6.0',
41 silly resolved     _nodeVersion: '5.7.0',
41 silly resolved     _npmUser: { name: 'peerigon', email: 'developers@peerigon.com' },
41 silly resolved     dist:
41 silly resolved      { shasum: 'b90ac6c71da27cfd6e7eda5409a5a803193c329b',
41 silly resolved        tarball: 'https://registry.npmjs.org/sass-loader/-/sass-loader-3.2.0.tgz' },
41 silly resolved     maintainers: [ [Object], [Object], [Object] ],
41 silly resolved     _npmOperationalInternal:
41 silly resolved      { host: 'packages-12-west.internal.npmjs.com',
41 silly resolved        tmp: 'tmp/sass-loader-3.2.0.tgz_1457787468411_0.5757605056278408' },
41 silly resolved     directories: {},
41 silly resolved     _resolved: 'https://registry.npmjs.org/sass-loader/-/sass-loader-3.2.0.tgz',
41 silly resolved     readme: 'ERROR: No README data found!' } ]
42 info install sass-loader@3.2.0 into /home/supernever/gallery-by-react/gallery-by-react
43 info installOne sass-loader@3.2.0
44 verbose node_modules/sass-loader unbuild
45 verbose tar unpack /home/supernever/.npm/sass-loader/3.2.0/package.tgz
46 silly lockFile 30bcf300-y-react-node-modules-sass-loader tar:///home/supernever/gallery-by-react/gallery-by-react/node_modules/sass-loader
47 verbose lock tar:///home/supernever/gallery-by-react/gallery-by-react/node_modules/sass-loader /home/supernever/.npm/30bcf300-y-react-node-modules-sass-loader.lock
48 silly lockFile 5b255919-pm-sass-loader-3-2-0-package-tgz tar:///home/supernever/.npm/sass-loader/3.2.0/package.tgz
49 verbose lock tar:///home/supernever/.npm/sass-loader/3.2.0/package.tgz /home/supernever/.npm/5b255919-pm-sass-loader-3-2-0-package-tgz.lock
50 silly gunzTarPerm modes [ '755', '644' ]
51 silly gunzTarPerm extractEntry package.json
52 silly gunzTarPerm extractEntry .npmignore
53 silly gunzTarPerm modified mode [ '.npmignore', 511, 493 ]
54 silly gunzTarPerm extractEntry README.md
55 silly gunzTarPerm extractEntry LICENSE
56 silly gunzTarPerm extractEntry index.js
57 silly gunzTarPerm extractEntry CHANGELOG.md
58 silly gunzTarPerm extractEntry .editorconfig
59 silly gunzTarPerm extractEntry .jshintignore
60 silly gunzTarPerm extractEntry .jshintrc
61 silly lockFile 30bcf300-y-react-node-modules-sass-loader tar:///home/supernever/gallery-by-react/gallery-by-react/node_modules/sass-loader
62 silly lockFile 30bcf300-y-react-node-modules-sass-loader tar:///home/supernever/gallery-by-react/gallery-by-react/node_modules/sass-loader
63 silly lockFile 5b255919-pm-sass-loader-3-2-0-package-tgz tar:///home/supernever/.npm/sass-loader/3.2.0/package.tgz
64 silly lockFile 5b255919-pm-sass-loader-3-2-0-package-tgz tar:///home/supernever/.npm/sass-loader/3.2.0/package.tgz
65 info preinstall sass-loader@3.2.0
66 verbose readDependencies using package.json deps
67 verbose readDependencies using package.json deps
68 verbose cache add [ 'async@^1.4.0', null ]
69 verbose cache add name=undefined spec="async@^1.4.0" args=["async@^1.4.0",null]
70 verbose parsed url { protocol: null,
70 verbose parsed url   slashes: null,
70 verbose parsed url   auth: null,
70 verbose parsed url   host: null,
70 verbose parsed url   port: null,
70 verbose parsed url   hostname: null,
70 verbose parsed url   hash: null,
70 verbose parsed url   search: null,
70 verbose parsed url   query: null,
70 verbose parsed url   pathname: 'async@^1.4.0',
70 verbose parsed url   path: 'async@^1.4.0',
70 verbose parsed url   href: 'async@^1.4.0' }
71 verbose cache add [ 'loader-utils@^0.2.5', null ]
72 verbose cache add name=undefined spec="loader-utils@^0.2.5" args=["loader-utils@^0.2.5",null]
73 verbose parsed url { protocol: null,
73 verbose parsed url   slashes: null,
73 verbose parsed url   auth: null,
73 verbose parsed url   host: null,
73 verbose parsed url   port: null,
73 verbose parsed url   hostname: null,
73 verbose parsed url   hash: null,
73 verbose parsed url   search: null,
73 verbose parsed url   query: null,
73 verbose parsed url   pathname: 'loader-utils@^0.2.5',
73 verbose parsed url   path: 'loader-utils@^0.2.5',
73 verbose parsed url   href: 'loader-utils@^0.2.5' }
74 verbose cache add [ 'object-assign@^4.0.1', null ]
75 verbose cache add name=undefined spec="object-assign@^4.0.1" args=["object-assign@^4.0.1",null]
76 verbose parsed url { protocol: null,
76 verbose parsed url   slashes: null,
76 verbose parsed url   auth: null,
76 verbose parsed url   host: null,
76 verbose parsed url   port: null,
76 verbose parsed url   hostname: null,
76 verbose parsed url   hash: null,
76 verbose parsed url   search: null,
76 verbose parsed url   query: null,
76 verbose parsed url   pathname: 'object-assign@^4.0.1',
76 verbose parsed url   path: 'object-assign@^4.0.1',
76 verbose parsed url   href: 'object-assign@^4.0.1' }
77 verbose cache add name="async" spec="^1.4.0" args=["async","^1.4.0"]
78 verbose parsed url { protocol: null,
78 verbose parsed url   slashes: null,
78 verbose parsed url   auth: null,
78 verbose parsed url   host: null,
78 verbose parsed url   port: null,
78 verbose parsed url   hostname: null,
78 verbose parsed url   hash: null,
78 verbose parsed url   search: null,
78 verbose parsed url   query: null,
78 verbose parsed url   pathname: '^1.4.0',
78 verbose parsed url   path: '^1.4.0',
78 verbose parsed url   href: '^1.4.0' }
79 verbose addNamed [ 'async', '^1.4.0' ]
80 verbose addNamed [ null, '>=1.4.0-0 <2.0.0-0' ]
81 silly lockFile 20ec6cb4-async-1-4-0 async@^1.4.0
82 verbose lock async@^1.4.0 /home/supernever/.npm/20ec6cb4-async-1-4-0.lock
83 verbose cache add name="loader-utils" spec="^0.2.5" args=["loader-utils","^0.2.5"]
84 verbose parsed url { protocol: null,
84 verbose parsed url   slashes: null,
84 verbose parsed url   auth: null,
84 verbose parsed url   host: null,
84 verbose parsed url   port: null,
84 verbose parsed url   hostname: null,
84 verbose parsed url   hash: null,
84 verbose parsed url   search: null,
84 verbose parsed url   query: null,
84 verbose parsed url   pathname: '^0.2.5',
84 verbose parsed url   path: '^0.2.5',
84 verbose parsed url   href: '^0.2.5' }
85 verbose addNamed [ 'loader-utils', '^0.2.5' ]
86 verbose addNamed [ null, '>=0.2.5-0 <0.3.0-0' ]
87 silly lockFile b90d1ddd-loader-utils-0-2-5 loader-utils@^0.2.5
88 verbose lock loader-utils@^0.2.5 /home/supernever/.npm/b90d1ddd-loader-utils-0-2-5.lock
89 verbose cache add name="object-assign" spec="^4.0.1" args=["object-assign","^4.0.1"]
90 verbose parsed url { protocol: null,
90 verbose parsed url   slashes: null,
90 verbose parsed url   auth: null,
90 verbose parsed url   host: null,
90 verbose parsed url   port: null,
90 verbose parsed url   hostname: null,
90 verbose parsed url   hash: null,
90 verbose parsed url   search: null,
90 verbose parsed url   query: null,
90 verbose parsed url   pathname: '^4.0.1',
90 verbose parsed url   path: '^4.0.1',
90 verbose parsed url   href: '^4.0.1' }
91 verbose addNamed [ 'object-assign', '^4.0.1' ]
92 verbose addNamed [ null, '>=4.0.1-0 <5.0.0-0' ]
93 silly lockFile 07ecbd72-object-assign-4-0-1 object-assign@^4.0.1
94 verbose lock object-assign@^4.0.1 /home/supernever/.npm/07ecbd72-object-assign-4-0-1.lock
95 silly addNameRange { name: 'async', range: '>=1.4.0-0 <2.0.0-0', hasData: false }
96 silly addNameRange { name: 'loader-utils',
96 silly addNameRange   range: '>=0.2.5-0 <0.3.0-0',
96 silly addNameRange   hasData: false }
97 silly addNameRange { name: 'object-assign',
97 silly addNameRange   range: '>=4.0.1-0 <5.0.0-0',
97 silly addNameRange   hasData: false }
98 verbose request where is /async
99 verbose request registry https://registry.npmjs.org/
100 verbose url raw /async
101 verbose url resolving [ 'https://registry.npmjs.org/', './async' ]
102 verbose url resolved https://registry.npmjs.org/async
103 verbose request where is https://registry.npmjs.org/async
104 info trying registry request attempt 1 at 03:06:04
105 verbose etag "2OL83BQZSFXZ16F6NASUP6TPS"
106 http GET https://registry.npmjs.org/async
107 verbose request where is /loader-utils
108 verbose request registry https://registry.npmjs.org/
109 verbose url raw /loader-utils
110 verbose url resolving [ 'https://registry.npmjs.org/', './loader-utils' ]
111 verbose url resolved https://registry.npmjs.org/loader-utils
112 verbose request where is https://registry.npmjs.org/loader-utils
113 info trying registry request attempt 1 at 03:06:04
114 verbose etag "40L22Y3PF5J7POK9Q9N4M0LKZ"
115 http GET https://registry.npmjs.org/loader-utils
116 verbose request where is /object-assign
117 verbose request registry https://registry.npmjs.org/
118 verbose url raw /object-assign
119 verbose url resolving [ 'https://registry.npmjs.org/', './object-assign' ]
120 verbose url resolved https://registry.npmjs.org/object-assign
121 verbose request where is https://registry.npmjs.org/object-assign
122 info trying registry request attempt 1 at 03:06:04
123 verbose etag "306VXDXQ7C0F3IQRIK18GIP6D"
124 http GET https://registry.npmjs.org/object-assign
125 http 304 https://registry.npmjs.org/loader-utils
126 silly registry.get cb [ 304,
126 silly registry.get   { date: 'Tue, 17 May 2016 19:06:04 GMT',
126 silly registry.get     via: '1.1 varnish',
126 silly registry.get     'cache-control': 'max-age=300',
126 silly registry.get     etag: '"40L22Y3PF5J7POK9Q9N4M0LKZ"',
126 silly registry.get     age: '52',
126 silly registry.get     connection: 'keep-alive',
126 silly registry.get     'x-served-by': 'cache-itm7427-ITM',
126 silly registry.get     'x-cache': 'HIT',
126 silly registry.get     'x-cache-hits': '1',
126 silly registry.get     'x-timer': 'S1463511964.966957,VS0,VE0',
126 silly registry.get     vary: 'Accept-Encoding' } ]
127 verbose etag https://registry.npmjs.org/loader-utils from cache
128 silly addNameRange number 2 { name: 'loader-utils',
128 silly addNameRange   range: '>=0.2.5-0 <0.3.0-0',
128 silly addNameRange   hasData: true }
129 silly addNameRange versions [ 'loader-utils',
129 silly addNameRange   [ '0.1.0',
129 silly addNameRange     '0.1.1',
129 silly addNameRange     '0.1.2',
129 silly addNameRange     '0.2.0',
129 silly addNameRange     '0.2.1',
129 silly addNameRange     '0.2.2',
129 silly addNameRange     '0.2.3',
129 silly addNameRange     '0.2.4',
129 silly addNameRange     '0.2.5',
129 silly addNameRange     '0.2.6',
129 silly addNameRange     '0.2.7',
129 silly addNameRange     '0.2.8',
129 silly addNameRange     '0.2.9',
129 silly addNameRange     '0.2.10',
129 silly addNameRange     '0.2.11',
129 silly addNameRange     '0.2.12',
129 silly addNameRange     '0.2.13',
129 silly addNameRange     '0.2.14',
129 silly addNameRange     '0.2.15' ] ]
130 verbose addNamed [ 'loader-utils', '0.2.15' ]
131 verbose addNamed [ '0.2.15', '0.2.15' ]
132 silly lockFile b74ddef1-loader-utils-0-2-15 loader-utils@0.2.15
133 verbose lock loader-utils@0.2.15 /home/supernever/.npm/b74ddef1-loader-utils-0-2-15.lock
134 silly lockFile b74ddef1-loader-utils-0-2-15 loader-utils@0.2.15
135 silly lockFile b74ddef1-loader-utils-0-2-15 loader-utils@0.2.15
136 silly lockFile b90d1ddd-loader-utils-0-2-5 loader-utils@^0.2.5
137 silly lockFile b90d1ddd-loader-utils-0-2-5 loader-utils@^0.2.5
138 http 304 https://registry.npmjs.org/async
139 silly registry.get cb [ 304,
139 silly registry.get   { date: 'Tue, 17 May 2016 19:06:04 GMT',
139 silly registry.get     via: '1.1 varnish',
139 silly registry.get     'cache-control': 'max-age=300',
139 silly registry.get     etag: '"2OL83BQZSFXZ16F6NASUP6TPS"',
139 silly registry.get     age: '17',
139 silly registry.get     connection: 'keep-alive',
139 silly registry.get     'x-served-by': 'cache-itm7427-ITM',
139 silly registry.get     'x-cache': 'HIT',
139 silly registry.get     'x-cache-hits': '1',
139 silly registry.get     'x-timer': 'S1463511964.985814,VS0,VE0',
139 silly registry.get     vary: 'Accept-Encoding' } ]
140 verbose etag https://registry.npmjs.org/async from cache
141 http 304 https://registry.npmjs.org/object-assign
142 silly registry.get cb [ 304,
142 silly registry.get   { date: 'Tue, 17 May 2016 19:06:04 GMT',
142 silly registry.get     via: '1.1 varnish',
142 silly registry.get     'cache-control': 'max-age=300',
142 silly registry.get     etag: '"306VXDXQ7C0F3IQRIK18GIP6D"',
142 silly registry.get     age: '158',
142 silly registry.get     connection: 'keep-alive',
142 silly registry.get     'x-served-by': 'cache-itm7424-ITM',
142 silly registry.get     'x-cache': 'HIT',
142 silly registry.get     'x-cache-hits': '1',
142 silly registry.get     'x-timer': 'S1463511964.998687,VS0,VE0',
142 silly registry.get     vary: 'Accept-Encoding' } ]
143 verbose etag https://registry.npmjs.org/object-assign from cache
144 silly addNameRange number 2 { name: 'async', range: '>=1.4.0-0 <2.0.0-0', hasData: true }
145 silly addNameRange versions [ 'async',
145 silly addNameRange   [ '0.1.0',
145 silly addNameRange     '0.1.1',
145 silly addNameRange     '0.1.2',
145 silly addNameRange     '0.1.3',
145 silly addNameRange     '0.1.4',
145 silly addNameRange     '0.1.5',
145 silly addNameRange     '0.1.6',
145 silly addNameRange     '0.1.7',
145 silly addNameRange     '0.1.8',
145 silly addNameRange     '0.1.9',
145 silly addNameRange     '0.1.10',
145 silly addNameRange     '0.1.11',
145 silly addNameRange     '0.1.12',
145 silly addNameRange     '0.1.13',
145 silly addNameRange     '0.1.14',
145 silly addNameRange     '0.1.15',
145 silly addNameRange     '0.1.16',
145 silly addNameRange     '0.1.17',
145 silly addNameRange     '0.1.18',
145 silly addNameRange     '0.1.19',
145 silly addNameRange     '0.1.20',
145 silly addNameRange     '0.1.21',
145 silly addNameRange     '0.1.22',
145 silly addNameRange     '0.2.0',
145 silly addNameRange     '0.2.1',
145 silly addNameRange     '0.2.2',
145 silly addNameRange     '0.2.3',
145 silly addNameRange     '0.2.4',
145 silly addNameRange     '0.2.5',
145 silly addNameRange     '0.2.6',
145 silly addNameRange     '0.2.7',
145 silly addNameRange     '0.2.8',
145 silly addNameRange     '0.2.9',
145 silly addNameRange     '0.2.10',
145 silly addNameRange     '0.3.0',
145 silly addNameRange     '0.4.0',
145 silly addNameRange     '0.4.1',
145 silly addNameRange     '0.5.0',
145 silly addNameRange     '0.6.0',
145 silly addNameRange     '0.6.1',
145 silly addNameRange     '0.6.2',
145 silly addNameRange     '0.7.0',
145 silly addNameRange     '0.8.0',
145 silly addNameRange     '0.9.0',
145 silly addNameRange     '0.9.2',
145 silly addNameRange     '1.0.0',
145 silly addNameRange     '1.1.0',
145 silly addNameRange     '1.2.0',
145 silly addNameRange     '1.1.1',
145 silly addNameRange     '1.2.1',
145 silly addNameRange     '1.3.0',
145 silly addNameRange     '1.4.0',
145 silly addNameRange     '1.4.1',
145 silly addNameRange     '1.4.2',
145 silly addNameRange     '1.5.0',
145 silly addNameRange     '1.5.1',
145 silly addNameRange     '1.5.2',
145 silly addNameRange     '2.0.0-alpha.0',
145 silly addNameRange     '2.0.0-rc.1',
145 silly addNameRange     '2.0.0-rc.2',
145 silly addNameRange     '2.0.0-rc.3',
145 silly addNameRange     '2.0.0-rc.4',
145 silly addNameRange     '2.0.0-rc.5' ] ]
146 verbose addNamed [ 'async', '1.5.2' ]
147 verbose addNamed [ '1.5.2', '1.5.2' ]
148 silly lockFile 2d6754e3-async-1-5-2 async@1.5.2
149 verbose lock async@1.5.2 /home/supernever/.npm/2d6754e3-async-1-5-2.lock
150 silly addNameRange number 2 { name: 'object-assign',
150 silly addNameRange   range: '>=4.0.1-0 <5.0.0-0',
150 silly addNameRange   hasData: true }
151 silly addNameRange versions [ 'object-assign',
151 silly addNameRange   [ '0.1.0',
151 silly addNameRange     '0.1.1',
151 silly addNameRange     '0.1.2',
151 silly addNameRange     '0.2.0',
151 silly addNameRange     '0.2.1',
151 silly addNameRange     '0.2.2',
151 silly addNameRange     '0.3.0',
151 silly addNameRange     '0.3.1',
151 silly addNameRange     '0.4.0',
151 silly addNameRange     '1.0.0',
151 silly addNameRange     '2.0.0',
151 silly addNameRange     '3.0.0',
151 silly addNameRange     '2.1.1',
151 silly addNameRange     '4.0.0',
151 silly addNameRange     '4.0.1',
151 silly addNameRange     '4.1.0' ] ]
152 verbose addNamed [ 'object-assign', '4.1.0' ]
153 verbose addNamed [ '4.1.0', '4.1.0' ]
154 silly lockFile 1a967fe9-object-assign-4-1-0 object-assign@4.1.0
155 verbose lock object-assign@4.1.0 /home/supernever/.npm/1a967fe9-object-assign-4-1-0.lock
156 silly lockFile 2d6754e3-async-1-5-2 async@1.5.2
157 silly lockFile 2d6754e3-async-1-5-2 async@1.5.2
158 silly lockFile 20ec6cb4-async-1-4-0 async@^1.4.0
159 silly lockFile 20ec6cb4-async-1-4-0 async@^1.4.0
160 silly lockFile 1a967fe9-object-assign-4-1-0 object-assign@4.1.0
161 silly lockFile 1a967fe9-object-assign-4-1-0 object-assign@4.1.0
162 silly lockFile 07ecbd72-object-assign-4-0-1 object-assign@^4.0.1
163 silly lockFile 07ecbd72-object-assign-4-0-1 object-assign@^4.0.1
164 silly resolved [ { name: 'loader-utils',
164 silly resolved     version: '0.2.15',
164 silly resolved     author: { name: 'Tobias Koppers @sokra' },
164 silly resolved     description: 'utils for webpack loaders',
164 silly resolved     dependencies:
164 silly resolved      { 'big.js': '^3.1.3',
164 silly resolved        'emojis-list': '^2.0.0',
164 silly resolved        json5: '^0.5.0',
164 silly resolved        'object-assign': '^4.0.1' },
164 silly resolved     scripts:
164 silly resolved      { test: 'mocha',
164 silly resolved        travis: 'npm run cover -- --report lcovonly',
164 silly resolved        cover: 'istanbul cover -x *.runtime.js node_modules/mocha/bin/_mocha',
164 silly resolved        'publish-patch': 'mocha && npm version patch && git push && git push --tags && npm publish' },
164 silly resolved     license: 'MIT',
164 silly resolved     repository:
164 silly resolved      { type: 'git',
164 silly resolved        url: 'https://github.com/webpack/loader-utils.git' },
164 silly resolved     devDependencies: { coveralls: '^2.11.2', istanbul: '^0.3.14', mocha: '^1.21.4' },
164 silly resolved     files: [ 'index.js' ],
164 silly resolved     readme: '# loader-utils\r\n\r\n## Methods\r\n\r\n### `getLoaderConfig`\r\n\r\nRecommended way to retrieve the loader config:\r\n\r\n```javascript\r\n// inside your loader\r\nconfig = loaderUtils.getLoaderConfig(this, "myLoader");\r\n```\r\n\r\nTries to read the loader config from the `webpack.config.js` under the given property name (`"myLoader"` in this case) and merges the result with the loader query. For example, if your `webpack.config.js` had this property...\r\n\r\n```javascript\r\ncheesecakeLoader: {\r\n\ttype: "delicious",\r\n\tslices: 4\r\n}\r\n```\r\n\r\n...and your loader was called with `?slices=8`, `getLoaderConfig(this, "cheesecakeLoader")` would return\r\n\r\n```javascript\r\n{\r\n\ttype: "delicious",\r\n\tslices: 8\r\n}\r\n```\r\n\r\nIt is recommended that you use the camelCased loader name as your default config property name.\r\n\r\n### `parseQuery`\r\n\r\n``` javascript\r\nvar query = loaderUtils.parseQuery(this.query);\r\nassert(typeof query == "object");\r\nif(query.flag)\r\n\t// ...\r\n```\r\n\r\n``` text\r\nnull                   -> {}\r\n?                      -> {}\r\n?flag                  -> { flag: true }\r\n?+flag                 -> { flag: true }\r\n?-flag                 -> { flag: false }\r\n?xyz=test              -> { xyz: "test" }\r\n?xyz[]=a               -> { xyz: ["a"] }\r\n?flag1&flag2           -> { flag1: true, flag2: true }\r\n?+flag1,-flag2         -> { flag1: true, flag2: false }\r\n?xyz[]=a,xyz[]=b       -> { xyz: ["a", "b"] }\r\n?a%2C%26b=c%2C%26d     -> { "a,&b": "c,&d" }\r\n?{json:5,data:{a:1}}   -> { json: 5, data: { a: 1 } }\r\n```\r\n\r\n### `stringifyRequest`\r\n\r\nMakes a request pretty and stringifies it. Absolute paths are replaced with relative ones.\r\n\r\nUse it instead of `JSON.stringify(...)` to build code of a `require(...)` call in a loader.\r\n\r\n``` javascript\r\nloaderUtils.stringifyRequest(this, require.resolve("./test"));\r\n// = "../node_modules/some-loader/lib/test.js"\r\n```\r\n\r\n### `urlToRequest`\r\n\r\nConverts some resource URL to a webpack module request.\r\n\r\n```javascript\r\nvar url = "path/to/module.js";\r\nvar request = loaderUtils.urlToRequest(url); // "./path/to/module.js"\r\n```\r\n\r\n#### Module URLs\r\n\r\nAny URL containing a `~` will be interpreted as a module request. Anything after the `~` will be considered the request path.\r\n\r\n```javascript\r\nvar url = "~path/to/module.js";\r\nvar request = loaderUtils.urlToRequest(url); // "path/to/module.js"\r\n```\r\n\r\n#### Root-relative URLs\r\n\r\nURLs that are root-relative (start with `/`) can be resolved relative to some arbitrary path by using the `root` parameter:\r\n\r\n```javascript\r\nvar url = "/path/to/module.js";\r\nvar root = "./root";\r\nvar request = loaderUtils.urlToRequest(url, root); // "./root/path/to/module.js"\r\n```\r\n\r\nTo convert a root-relative URL into a module URL, specify a `root` value that starts with `~`:\r\n\r\n```javascript\r\nvar url = "/path/to/module.js";\r\nvar root = "~";\r\nvar request = loaderUtils.urlToRequest(url, root); // "path/to/module.js"\r\n```\r\n\r\n### `interpolateName`\r\n\r\nInterpolates a filename template using multiple placeholders and/or a regular expression.\r\nThe template and regular expression are set as query params called `name` and `regExp` on the current loader\'s context.\r\n\r\n```javascript\r\nvar interpolatedName = loaderUtils.interpolateName(loaderContext, name, options);\r\n```\r\n\r\nThe following tokens are replaced in the `name` parameter:\r\n\r\n* `[ext]` the extension of the resource\r\n* `[name]` the basename of the resource\r\n* `[path]` the path of the resource relative to the `context` query parameter or option.\r\n* `[folder]` the folder of the resource is in.\r\n* `[emoji]` a random emoji representation of `options.content`\r\n* `[emoji:<length>]` same as above, but with a customizable number of emojis\r\n* `[hash]` the hash of `options.content` (Buffer) (by default it\'s the hex digest of the md5 hash)\r\n* `[<hashType>:hash:<digestType>:<length>]` optionally one can configure\r\n  * other `hashType`s, i. e. `sha1`, `md5`, `sha256`, `sha512`\r\n  * other `digestType`s, i. e. `hex`, `base26`, `base32`, `base36`, `base49`, `base52`, `base58`, `base62`, `base64`\r\n  * and `length` the length in chars\r\n* `[N]` the N-th match obtained from matching the current file name against `options.regExp`\r\n\r\nExamples\r\n\r\n``` javascript\r\n// loaderContext.resourcePath = "/app/js/javascript.js"\r\nloaderUtils.interpolateName(loaderContext, "js/[hash].script.[ext]", { content: ... });\r\n// => js/9473fdd0d880a43c21b7778d34872157.script.js\r\n\r\n// loaderContext.resourcePath = "/app/page.html"\r\nloaderUtils.interpolateName(loaderContext, "html-[hash:6].html", { content: ... });\r\n// => html-9473fd.html\r\n\r\n// loaderContext.resourcePath = "/app/flash.txt"\r\nloaderUtils.interpolateName(loaderContext, "[hash]", { content: ... });\r\n// => c31e9820c001c9c4a86bce33ce43b679\r\n\r\n// loaderContext.resourcePath = "/app/img/image.gif"\r\nloaderUtils.interpolateName(loaderContext, "[emoji]", { content: ... });\r\n// => 👍\r\n\r\n// loaderContext.resourcePath = "/app/img/image.gif"\r\nloaderUtils.interpolateName(loaderContext, "[emoji:4]", { content: ... });\r\n// => 🙍🏢📤🐝\r\n\r\n// loaderContext.resourcePath = "/app/img/image.png"\r\nloaderUtils.interpolateName(loaderContext, "[sha512:hash:base64:7].[ext]", { content: ... });\r\n// => 2BKDTjl.png\r\n// use sha512 hash instead of md5 and with only 7 chars of base64\r\n\r\n// loaderContext.resourcePath = "/app/img/myself.png"\r\n// loaderContext.query.name =\r\nloaderUtils.interpolateName(loaderContext, "picture.png");\r\n// => picture.png\r\n\r\n// loaderContext.resourcePath = "/app/dir/file.png"\r\nloaderUtils.interpolateName(loaderContext, "[path][name].[ext]?[hash]", { content: ... });\r\n// => /app/dir/file.png?9473fdd0d880a43c21b7778d34872157\r\n\r\n// loaderContext.resourcePath = "/app/js/page-home.js"\r\nloaderUtils.interpolateName(loaderContext, "script-[1].[ext]", { regExp: "page-(.*)\\\\.js", content: ... });\r\n// => script-home.js\r\n```\r\n\r\n### `getHashDigest`\r\n\r\n``` javascript\r\nvar digestString = loaderUtils.getHashDigest(buffer, hashType, digestType, maxLength);\r\n```\r\n\r\n* `buffer` the content that should be hashed\r\n* `hashType` one of `sha1`, `md5`, `sha256`, `sha512` or any other node.js supported hash type\r\n* `digestType` one of `hex`, `base26`, `base32`, `base36`, `base49`, `base52`, `base58`, `base62`, `base64`\r\n* `maxLength` the maximum length in chars\r\n\r\n## License\r\n\r\nMIT (http://www.opensource.org/licenses/mit-license.php)\r\n',
164 silly resolved     readmeFilename: 'README.md',
164 silly resolved     bugs: { url: 'https://github.com/webpack/loader-utils/issues' },
164 silly resolved     homepage: 'https://github.com/webpack/loader-utils',
164 silly resolved     _id: 'loader-utils@0.2.15',
164 silly resolved     _from: 'loader-utils@^0.2.5' },
164 silly resolved   { name: 'async',
164 silly resolved     description: 'Higher-order functions and common patterns for asynchronous code',
164 silly resolved     main: 'lib/async.js',
164 silly resolved     files: [ 'lib', 'dist/async.js', 'dist/async.min.js' ],
164 silly resolved     author: { name: 'Caolan McMahon' },
164 silly resolved     version: '1.5.2',
164 silly resolved     keywords: [ 'async', 'callback', 'utility', 'module' ],
164 silly resolved     repository: { type: 'git', url: 'https://github.com/caolan/async.git' },
164 silly resolved     bugs: { url: 'https://github.com/caolan/async/issues' },
164 silly resolved     license: 'MIT',
164 silly resolved     devDependencies:
164 silly resolved      { benchmark: 'git+https://github.com/bestiejs/benchmark.js',
164 silly resolved        bluebird: '^2.9.32',
164 silly resolved        chai: '^3.1.0',
164 silly resolved        coveralls: '^2.11.2',
164 silly resolved        'es6-promise': '^2.3.0',
164 silly resolved        jscs: '^1.13.1',
164 silly resolved        jshint: '~2.8.0',
164 silly resolved        karma: '^0.13.2',
164 silly resolved        'karma-browserify': '^4.2.1',
164 silly resolved        'karma-firefox-launcher': '^0.1.6',
164 silly resolved        'karma-mocha': '^0.2.0',
164 silly resolved        'karma-mocha-reporter': '^1.0.2',
164 silly resolved        lodash: '^3.9.0',
164 silly resolved        mkdirp: '~0.5.1',
164 silly resolved        mocha: '^2.2.5',
164 silly resolved        'native-promise-only': '^0.8.0-a',
164 silly resolved        nodeunit: '>0.0.0',
164 silly resolved        nyc: '^2.1.0',
164 silly resolved        rsvp: '^3.0.18',
164 silly resolved        semver: '^4.3.6',
164 silly resolved        'uglify-js': '~2.4.0',
164 silly resolved        xyz: '^0.5.0',
164 silly resolved        yargs: '~3.9.1' },
164 silly resolved     jam: { main: 'lib/async.js', include: [Object], categories: [Object] },
164 silly resolved     scripts:
164 silly resolved      { 'mocha-node-test': 'mocha mocha_test/',
164 silly resolved        'mocha-browser-test': 'karma start',
164 silly resolved        'mocha-test': 'npm run mocha-node-test && npm run mocha-browser-test',
164 silly resolved        'nodeunit-test': 'nodeunit test/test-async.js',
164 silly resolved        test: 'npm run-script lint && npm run nodeunit-test && npm run mocha-test',
164 silly resolved        lint: 'jshint lib/*.js test/*.js perf/*.js && jscs lib/*.js test/*.js perf/*.js',
164 silly resolved        coverage: 'nyc npm test && nyc report',
164 silly resolved        coveralls: 'nyc npm test && nyc report --reporter=text-lcov | coveralls' },
164 silly resolved     spm: { main: 'lib/async.js' },
164 silly resolved     volo: { main: 'lib/async.js', ignore: [Object] },
164 silly resolved     readme: '# Async.js\n\n[![Build Status via Travis CI](https://travis-ci.org/caolan/async.svg?branch=master)](https://travis-ci.org/caolan/async)\n[![NPM version](http://img.shields.io/npm/v/async.svg)](https://www.npmjs.org/package/async)\n[![Coverage Status](https://coveralls.io/repos/caolan/async/badge.svg?branch=master)](https://coveralls.io/r/caolan/async?branch=master)\n[![Join the chat at https://gitter.im/caolan/async](https://badges.gitter.im/Join%20Chat.svg)](https://gitter.im/caolan/async?utm_source=badge&utm_medium=badge&utm_campaign=pr-badge&utm_content=badge)\n\n\nAsync is a utility module which provides straight-forward, powerful functions\nfor working with asynchronous JavaScript. Although originally designed for\nuse with [Node.js](http://nodejs.org) and installable via `npm install async`,\nit can also be used directly in the browser.\n\nAsync is also installable via:\n\n- [bower](http://bower.io/): `bower install async`\n- [component](https://github.com/component/component): `component install\n  caolan/async`\n- [jam](http://jamjs.org/): `jam install async`\n- [spm](http://spmjs.io/): `spm install async`\n\nAsync provides around 20 functions that include the usual \'functional\'\nsuspects (`map`, `reduce`, `filter`, `each`…) as well as some common patterns\nfor asynchronous control flow (`parallel`, `series`, `waterfall`…). All these\nfunctions assume you follow the Node.js convention of providing a single\ncallback as the last argument of your `async` function.\n\n\n## Quick Examples\n\n```javascript\nasync.map([\'file1\',\'file2\',\'file3\'], fs.stat, function(err, results){\n    // results is now an array of stats for each file\n});\n\nasync.filter([\'file1\',\'file2\',\'file3\'], fs.exists, function(results){\n    // results now equals an array of the existing files\n});\n\nasync.parallel([\n    function(){ ... },\n    function(){ ... }\n], callback);\n\nasync.series([\n    function(){ ... },\n    function(){ ... }\n]);\n```\n\nThere are many more functions available so take a look at the docs below for a\nfull list. This module aims to be comprehensive, so if you feel anything is\nmissing please create a GitHub issue for it.\n\n## Common Pitfalls <sub>[(StackOverflow)](http://stackoverflow.com/questions/tagged/async.js)</sub>\n### Synchronous iteration functions\n\nIf you get an error like `RangeError: Maximum call stack size exceeded.` or other stack overflow issues when using async, you are likely using a synchronous iterator.  By *synchronous* we mean a function that calls its callback on the same tick in the javascript event loop, without doing any I/O or using any timers.  Calling many callbacks iteratively will quickly overflow the stack. If you run into this issue, just defer your callback with `async.setImmediate` to start a new call stack on the next tick of the event loop.\n\nThis can also arise by accident if you callback early in certain cases:\n\n```js\nasync.eachSeries(hugeArray, function iterator(item, callback) {\n  if (inCache(item)) {\n    callback(null, cache[item]); // if many items are cached, you\'ll overflow\n  } else {\n    doSomeIO(item, callback);\n  }\n}, function done() {\n  //...\n});\n```\n\nJust change it to:\n\n```js\nasync.eachSeries(hugeArray, function iterator(item, callback) {\n  if (inCache(item)) {\n    async.setImmediate(function () {\n      callback(null, cache[item]);\n    });\n  } else {\n    doSomeIO(item, callback);\n  //...\n```\n\nAsync guards against synchronous functions in some, but not all, cases.  If you are still running into stack overflows, you can defer as suggested above, or wrap functions with [`async.ensureAsync`](#ensureAsync)  Functions that are asynchronous by their nature do not have this problem and don\'t need the extra callback deferral.\n\nIf JavaScript\'s event loop is still a bit nebulous, check out [this article](http://blog.carbonfive.com/2013/10/27/the-javascript-event-loop-explained/) or [this talk](http://2014.jsconf.eu/speakers/philip-roberts-what-the-heck-is-the-event-loop-anyway.html) for more detailed information about how it works.\n\n\n### Multiple callbacks\n\nMake sure to always `return` when calling a callback early, otherwise you will cause multiple callbacks and unpredictable behavior in many cases.\n\n```js\nasync.waterfall([\n    function (callback) {\n        getSomething(options, function (err, result) {\n          if (err) {\n            callback(new Error("failed getting something:" + err.message));\n            // we should return here\n          }\n          // since we did not return, this callback still will be called and\n          // `processData` will be called twice\n          callback(null, result);\n        });\n    },\n    processData\n], done)\n```\n\nIt is always good practice to `return callback(err, result)`  whenever a callback call is not the last statement of a function.\n\n\n### Binding a context to an iterator\n\nThis section is really about `bind`, not about `async`. If you are wondering how to\nmake `async` execute your iterators in a given context, or are confused as to why\na method of another library isn\'t working as an iterator, study this example:\n\n```js\n// Here is a simple object with an (unnecessarily roundabout) squaring method\nvar AsyncSquaringLibrary = {\n  squareExponent: 2,\n  square: function(number, callback){\n    var result = Math.pow(number, this.squareExponent);\n    setTimeout(function(){\n      callback(null, result);\n    }, 200);\n  }\n};\n\nasync.map([1, 2, 3], AsyncSquaringLibrary.square, function(err, result){\n  // result is [NaN, NaN, NaN]\n  // This fails because the `this.squareExponent` expression in the square\n  // function is not evaluated in the context of AsyncSquaringLibrary, and is\n  // therefore undefined.\n});\n\nasync.map([1, 2, 3], AsyncSquaringLibrary.square.bind(AsyncSquaringLibrary), function(err, result){\n  // result is [1, 4, 9]\n  // With the help of bind we can attach a context to the iterator before\n  // passing it to async. Now the square function will be executed in its\n  // \'home\' AsyncSquaringLibrary context and the value of `this.squareExponent`\n  // will be as expected.\n});\n```\n\n## Download\n\nThe source is available for download from\n[GitHub](https://github.com/caolan/async/blob/master/lib/async.js).\nAlternatively, you can install using Node Package Manager (`npm`):\n\n    npm install async\n\nAs well as using Bower:\n\n    bower install async\n\n__Development:__ [async.js](https://github.com/caolan/async/raw/master/lib/async.js) - 29.6kb Uncompressed\n\n## In the Browser\n\nSo far it\'s been tested in IE6, IE7, IE8, FF3.6 and Chrome 5.\n\nUsage:\n\n```html\n<script type="text/javascript" src="async.js"></script>\n<script type="text/javascript">\n\n    async.map(data, asyncProcess, function(err, results){\n        alert(results);\n    });\n\n</script>\n```\n\n## Documentation\n\nSome functions are also available in the following forms:\n* `<name>Series` - the same as `<name>` but runs only a single async operation at a time\n* `<name>Limit` - the same as `<name>` but runs a maximum of `limit` async operations at a time\n\n### Collections\n\n* [`each`](#each), `eachSeries`, `eachLimit`\n* [`forEachOf`](#forEachOf), `forEachOfSeries`, `forEachOfLimit`\n* [`map`](#map), `mapSeries`, `mapLimit`\n* [`filter`](#filter), `filterSeries`, `filterLimit`\n* [`reject`](#reject), `rejectSeries`, `rejectLimit`\n* [`reduce`](#reduce), [`reduceRight`](#reduceRight)\n* [`detect`](#detect), `detectSeries`, `detectLimit`\n* [`sortBy`](#sortBy)\n* [`some`](#some), `someLimit`\n* [`every`](#every), `everyLimit`\n* [`concat`](#concat), `concatSeries`\n\n### Control Flow\n\n* [`series`](#seriestasks-callback)\n* [`parallel`](#parallel), `parallelLimit`\n* [`whilst`](#whilst), [`doWhilst`](#doWhilst)\n* [`until`](#until), [`doUntil`](#doUntil)\n* [`during`](#during), [`doDuring`](#doDuring)\n* [`forever`](#forever)\n* [`waterfall`](#waterfall)\n* [`compose`](#compose)\n* [`seq`](#seq)\n* [`applyEach`](#applyEach), `applyEachSeries`\n* [`queue`](#queue), [`priorityQueue`](#priorityQueue)\n* [`cargo`](#cargo)\n* [`auto`](#auto)\n* [`retry`](#retry)\n* [`iterator`](#iterator)\n* [`times`](#times), `timesSeries`, `timesLimit`\n\n### Utils\n\n* [`apply`](#apply)\n* [`nextTick`](#nextTick)\n* [`memoize`](#memoize)\n* [`unmemoize`](#unmemoize)\n* [`ensureAsync`](#ensureAsync)\n* [`constant`](#constant)\n* [`asyncify`](#asyncify)\n* [`wrapSync`](#wrapSync)\n* [`log`](#log)\n* [`dir`](#dir)\n* [`noConflict`](#noConflict)\n\n## Collections\n\n<a name="forEach" />\n<a name="each" />\n### each(arr, iterator, [callback])\n\nApplies the function `iterator` to each item in `arr`, in parallel.\nThe `iterator` is called with an item from the list, and a callback for when it\nhas finished. If the `iterator` passes an error to its `callback`, the main\n`callback` (for the `each` function) is immediately called with the error.\n\nNote, that since this function applies `iterator` to each item in parallel,\nthere is no guarantee that the iterator functions will complete in order.\n\n__Arguments__\n\n* `arr` - An array to iterate over.\n* `iterator(item, callback)` - A function to apply to each item in `arr`.\n  The iterator is passed a `callback(err)` which must be called once it has\n  completed. If no error has occurred, the `callback` should be run without\n  arguments or with an explicit `null` argument.  The array index is not passed\n  to the iterator.  If you need the index, use [`forEachOf`](#forEachOf).\n* `callback(err)` - *Optional* A callback which is called when all `iterator` functions\n  have finished, or an error occurs.\n\n__Examples__\n\n\n```js\n// assuming openFiles is an array of file names and saveFile is a function\n// to save the modified contents of that file:\n\nasync.each(openFiles, saveFile, function(err){\n    // if any of the saves produced an error, err would equal that error\n});\n```\n\n```js\n// assuming openFiles is an array of file names\n\nasync.each(openFiles, function(file, callback) {\n\n  // Perform operation on file here.\n  console.log(\'Processing file \' + file);\n\n  if( file.length > 32 ) {\n    console.log(\'This file name is too long\');\n    callback(\'File name too long\');\n  } else {\n    // Do work to process file here\n    console.log(\'File processed\');\n    callback();\n  }\n}, function(err){\n    // if any of the file processing produced an error, err would equal that error\n    if( err ) {\n      // One of the iterations produced an error.\n      // All processing will now stop.\n      console.log(\'A file failed to process\');\n    } else {\n      console.log(\'All files have been processed successfully\');\n    }\n});\n```\n\n__Related__\n\n* eachSeries(arr, iterator, [callback])\n* eachLimit(arr, limit, iterator, [callback])\n\n---------------------------------------\n\n<a name="forEachOf" />\n<a name="eachOf" />\n\n### forEachOf(obj, iterator, [callback])\n\nLike `each`, except that it iterates over objects, and passes the key as the second argument to the iterator.\n\n__Arguments__\n\n* `obj` - An object or array to iterate over.\n* `iterator(item, key, callback)` - A function to apply to each item in `obj`.\nThe `key` is the item\'s key, or index in the case of an array. The iterator is\npassed a `callback(err)` which must be called once it has completed. If no\nerror has occurred, the callback should be run without arguments or with an\nexplicit `null` argument.\n* `callback(err)` - *Optional* A callback which is called when all `iterator` functions have finished, or an error occurs.\n\n__Example__\n\n```js\nvar obj = {dev: "/dev.json", test: "/test.json", prod: "/prod.json"};\nvar configs = {};\n\nasync.forEachOf(obj, function (value, key, callback) {\n  fs.readFile(__dirname + value, "utf8", function (err, data) {\n    if (err) return callback(err);\n    try {\n      configs[key] = JSON.parse(data);\n    } catch (e) {\n      return callback(e);\n    }\n    callback();\n  })\n}, function (err) {\n  if (err) console.error(err.message);\n  // configs is now a map of JSON data\n  doSomethingWith(configs);\n})\n```\n\n__Related__\n\n* forEachOfSeries(obj, iterator, [callback])\n* forEachOfLimit(obj, limit, iterator, [callback])\n\n---------------------------------------\n\n<a name="map" />\n### map(arr, iterator, [callback])\n\nProduces a new array of values by mapping each value in `arr` through\nthe `iterator` function. The `iterator` is called with an item from `arr` and a\ncallback for when it has finished processing. Each of these callback takes 2 arguments:\nan `error`, and the transformed item from `arr`. If `iterator` passes an error to its\ncallback, the main `callback` (for the `map` function) is immediately called with the error.\n\nNote, that since this function applies the `iterator` to each item in parallel,\nthere is no guarantee that the `iterator` functions will complete in order.\nHowever, the results array will be in the same order as the original `arr`.\n\n__Arguments__\n\n* `arr` - An array to iterate over.\n* `iterator(item, callback)` - A function to apply to each item in `arr`.\n  The iterator is passed a `callback(err, transformed)` which must be called once\n  it has completed with an error (which can be `null`) and a transformed item.\n* `callback(err, results)` - *Optional* A callback which is called when all `iterator`\n  functions have finished, or an error occurs. Results is an array of the\n  transformed items from the `arr`.\n\n__Example__\n\n```js\nasync.map([\'file1\',\'file2\',\'file3\'], fs.stat, function(err, results){\n    // results is now an array of stats for each file\n});\n```\n\n__Related__\n* mapSeries(arr, iterator, [callback])\n* mapLimit(arr, limit, iterator, [callback])\n\n---------------------------------------\n\n<a name="select" />\n<a name="filter" />\n### filter(arr, iterator, [callback])\n\n__Alias:__ `select`\n\nReturns a new array of all the values in `arr` which pass an async truth test.\n_The callback for each `iterator` call only accepts a single argument of `true` or\n`false`; it does not accept an error argument first!_ This is in-line with the\nway node libraries work with truth tests like `fs.exists`. This operation is\nperformed in parallel, but the results array will be in the same order as the\noriginal.\n\n__Arguments__\n\n* `arr` - An array to iterate over.\n* `iterator(item, callback)` - A truth test to apply to each item in `arr`.\n  The `iterator` is passed a `callback(truthValue)`, which must be called with a\n  boolean argument once it has completed.\n* `callback(results)` - *Optional* A callback which is called after all the `iterator`\n  functions have finished.\n\n__Example__\n\n```js\nasync.filter([\'file1\',\'file2\',\'file3\'], fs.exists, function(results){\n    // results now equals an array of the existing files\n});\n```\n\n__Related__\n\n* filterSeries(arr, iterator, [callback])\n* filterLimit(arr, limit, iterator, [callback])\n\n---------------------------------------\n\n<a name="reject" />\n### reject(arr, iterator, [callback])\n\nThe opposite of [`filter`](#filter). Removes values that pass an `async` truth test.\n\n__Related__\n\n* rejectSeries(arr, iterator, [callback])\n* rejectLimit(arr, limit, iterator, [callback])\n\n---------------------------------------\n\n<a name="reduce" />\n### reduce(arr, memo, iterator, [callback])\n\n__Aliases:__ `inject`, `foldl`\n\nReduces `arr` into a single value using an async `iterator` to return\neach successive step. `memo` is the initial state of the reduction.\nThis function only operates in series.\n\nFor performance reasons, it may make sense to split a call to this function into\na parallel map, and then use the normal `Array.prototype.reduce` on the results.\nThis function is for situations where each step in the reduction needs to be async;\nif you can get the data before reducing it, then it\'s probably a good idea to do so.\n\n__Arguments__\n\n* `arr` - An array to iterate over.\n* `memo` - The initial state of the reduction.\n* `iterator(memo, item, callback)` - A function applied to each item in the\n  array to produce the next step in the reduction. The `iterator` is passed a\n  `callback(err, reduction)` which accepts an optional error as its first\n  argument, and the state of the reduction as the second. If an error is\n  passed to the callback, the reduction is stopped and the main `callback` is\n  immediately called with the error.\n* `callback(err, result)` - *Optional* A callback which is called after all the `iterator`\n  functions have finished. Result is the reduced value.\n\n__Example__\n\n```js\nasync.reduce([1,2,3], 0, function(memo, item, callback){\n    // pointless async:\n    process.nextTick(function(){\n        callback(null, memo + item)\n    });\n}, function(err, result){\n    // result is now equal to the last value of memo, which is 6\n});\n```\n\n---------------------------------------\n\n<a name="reduceRight" />\n### reduceRight(arr, memo, iterator, [callback])\n\n__Alias:__ `foldr`\n\nSame as [`reduce`](#reduce), only operates on `arr` in reverse order.\n\n\n---------------------------------------\n\n<a name="detect" />\n### detect(arr, iterator, [callback])\n\nReturns the first value in `arr` that passes an async truth test. The\n`iterator` is applied in parallel, meaning the first iterator to return `true` will\nfire the detect `callback` with that result. That means the result might not be\nthe first item in the original `arr` (in terms of order) that passes the test.\n\nIf order within the original `arr` is important, then look at [`detectSeries`](#detectSeries).\n\n__Arguments__\n\n* `arr` - An array to iterate over.\n* `iterator(item, callback)` - A truth test to apply to each item in `arr`.\n  The iterator is passed a `callback(truthValue)` which must be called with a\n  boolean argument once it has completed. **Note: this callback does not take an error as its first argument.**\n* `callback(result)` - *Optional* A callback which is called as soon as any iterator returns\n  `true`, or after all the `iterator` functions have finished. Result will be\n  the first item in the array that passes the truth test (iterator) or the\n  value `undefined` if none passed.  **Note: this callback does not take an error as its first argument.**\n\n__Example__\n\n```js\nasync.detect([\'file1\',\'file2\',\'file3\'], fs.exists, function(result){\n    // result now equals the first file in the list that exists\n});\n```\n\n__Related__\n\n* detectSeries(arr, iterator, [callback])\n* detectLimit(arr, limit, iterator, [callback])\n\n---------------------------------------\n\n<a name="sortBy" />\n### sortBy(arr, iterator, [callback])\n\nSorts a list by the results of running each `arr` value through an async `iterator`.\n\n__Arguments__\n\n* `arr` - An array to iterate over.\n* `iterator(item, callback)` - A function to apply to each item in `arr`.\n  The iterator is passed a `callback(err, sortValue)` which must be called once it\n  has completed with an error (which can be `null`) and a value to use as the sort\n  criteria.\n* `callback(err, results)` - *Optional* A callback which is called after all the `iterator`\n  functions have finished, or an error occurs. Results is the items from\n  the original `arr` sorted by the values returned by the `iterator` calls.\n\n__Example__\n\n```js\nasync.sortBy([\'file1\',\'file2\',\'file3\'], function(file, callback){\n    fs.stat(file, function(err, stats){\n        callback(err, stats.mtime);\n    });\n}, function(err, results){\n    // results is now the original array of files sorted by\n    // modified date\n});\n```\n\n__Sort Order__\n\nBy modifying the callback parameter the sorting order can be influenced:\n\n```js\n//ascending order\nasync.sortBy([1,9,3,5], function(x, callback){\n    callback(null, x);\n}, function(err,result){\n    //result callback\n} );\n\n//descending order\nasync.sortBy([1,9,3,5], function(x, callback){\n    callback(null, x*-1);    //<- x*-1 instead of x, turns the order around\n}, function(err,result){\n    //result callback\n} );\n```\n\n---------------------------------------\n\n<a name="some" />\n### some(arr, iterator, [callback])\n\n__Alias:__ `any`\n\nReturns `true` if at least one element in the `arr` satisfies an async test.\n_The callback for each iterator call only accepts a single argument of `true` or\n`false`; it does not accept an error argument first!_ This is in-line with the\nway node libraries work with truth tests like `fs.exists`. Once any iterator\ncall returns `true`, the main `callback` is immediately called.\n\n__Arguments__\n\n* `arr` - An array to iterate over.\n* `iterator(item, callback)` - A truth test to apply to each item in the array\n  in parallel. The iterator is passed a `callback(truthValue)`` which must be\n  called with a boolean argument once it has completed.\n* `callback(result)` - *Optional* A callback which is called as soon as any iterator returns\n  `true`, or after all the iterator functions have finished. Result will be\n  either `true` or `false` depending on the values of the async tests.\n\n **Note: the callbacks do not take an error as their first argument.**\n__Example__\n\n```js\nasync.some([\'file1\',\'file2\',\'file3\'], fs.exists, function(result){\n    // if result is true then at least one of the files exists\n});\n```\n\n__Related__\n\n* someLimit(arr, limit, iterator, callback)\n\n---------------------------------------\n\n<a name="every" />\n### every(arr, iterator, [callback])\n\n__Alias:__ `all`\n\nReturns `true` if every element in `arr` satisfies an async test.\n_The callback for each `iterator` call only accepts a single argument of `true` or\n`false`; it does not accept an error argument first!_ This is in-line with the\nway node libraries work with truth tests like `fs.exists`.\n\n__Arguments__\n\n* `arr` - An array to iterate over.\n* `iterator(item, callback)` - A truth test to apply to each item in the array\n  in parallel. The iterator is passed a `callback(truthValue)` which must be\n  called with a  boolean argument once it has completed.\n* `callback(result)` - *Optional* A callback which is called as soon as any iterator returns\n  `false`, or after all the iterator functions have finished. Result will be\n  either `true` or `false` depending on the values of the async tests.\n\n **Note: the callbacks do not take an error as their first argument.**\n\n__Example__\n\n```js\nasync.every([\'file1\',\'file2\',\'file3\'], fs.exists, function(result){\n    // if result is true then every file exists\n});\n```\n\n__Related__\n\n* everyLimit(arr, limit, iterator, callback)\n\n---------------------------------------\n\n<a name="concat" />\n### concat(arr, iterator, [callback])\n\nApplies `iterator` to each item in `arr`, concatenating the results. Returns the\nconcatenated list. The `iterator`s are called in parallel, and the results are\nconcatenated as they return. There is no guarantee that the results array will\nbe returned in the original order of `arr` passed to the `iterator` function.\n\n__Arguments__\n\n* `arr` - An array to iterate over.\n* `iterator(item, callback)` - A function to apply to each item in `arr`.\n  The iterator is passed a `callback(err, results)` which must be called once it\n  has completed with an error (which can be `null`) and an array of results.\n* `callback(err, results)` - *Optional* A callback which is called after all the `iterator`\n  functions have finished, or an error occurs. Results is an array containing\n  the concatenated results of the `iterator` function.\n\n__Example__\n\n```js\nasync.concat([\'dir1\',\'dir2\',\'dir3\'], fs.readdir, function(err, files){\n    // files is now a list of filenames that exist in the 3 directories\n});\n```\n\n__Related__\n\n* concatSeries(arr, iterator, [callback])\n\n\n## Control Flow\n\n<a name="series" />\n### series(tasks, [callback])\n\nRun the functions in the `tasks` array in series, each one running once the previous\nfunction has completed. If any functions in the series pass an error to its\ncallback, no more functions are run, and `callback` is immediately called with the value of the error.\nOtherwise, `callback` receives an array of results when `tasks` have completed.\n\nIt is also possible to use an object instead of an array. Each property will be\nrun as a function, and the results will be passed to the final `callback` as an object\ninstead of an array. This can be a more readable way of handling results from\n[`series`](#series).\n\n**Note** that while many implementations preserve the order of object properties, the\n[ECMAScript Language Specification](http://www.ecma-international.org/ecma-262/5.1/#sec-8.6)\nexplicitly states that\n\n> The mechanics and order of enumerating the properties is not specified.\n\nSo if you rely on the order in which your series of functions are executed, and want\nthis to work on all platforms, consider using an array.\n\n__Arguments__\n\n* `tasks` - An array or object containing functions to run, each function is passed\n  a `callback(err, result)` it must call on completion with an error `err` (which can\n  be `null`) and an optional `result` value.\n* `callback(err, results)` - An optional callback to run once all the functions\n  have completed. This function gets a results array (or object) containing all\n  the result arguments passed to the `task` callbacks.\n\n__Example__\n\n```js\nasync.series([\n    function(callback){\n        // do some stuff ...\n        callback(null, \'one\');\n    },\n    function(callback){\n        // do some more stuff ...\n        callback(null, \'two\');\n    }\n],\n// optional callback\nfunction(err, results){\n    // results is now equal to [\'one\', \'two\']\n});\n\n\n// an example using an object instead of an array\nasync.series({\n    one: function(callback){\n        setTimeout(function(){\n            callback(null, 1);\n        }, 200);\n    },\n    two: function(callback){\n        setTimeout(function(){\n            callback(null, 2);\n        }, 100);\n    }\n},\nfunction(err, results) {\n    // results is now equal to: {one: 1, two: 2}\n});\n```\n\n---------------------------------------\n\n<a name="parallel" />\n### parallel(tasks, [callback])\n\nRun the `tasks` array of functions in parallel, without waiting until the previous\nfunction has completed. If any of the functions pass an error to its\ncallback, the main `callback` is immediately called with the value of the error.\nOnce the `tasks` have completed, the results are passed to the final `callback` as an\narray.\n\n**Note:** `parallel` is about kicking-off I/O tasks in parallel, not about parallel execution of code.  If your tasks do not use any timers or perform any I/O, they will actually be executed in series.  Any synchronous setup sections for each task will happen one after the other.  JavaScript remains single-threaded.\n\nIt is also possible to use an object instead of an array. Each property will be\nrun as a function and the results will be passed to the final `callback` as an object\ninstead of an array. This can be a more readable way of handling results from\n[`parallel`](#parallel).\n\n\n__Arguments__\n\n* `tasks` - An array or object containing functions to run. Each function is passed\n  a `callback(err, result)` which it must call on completion with an error `err`\n  (which can be `null`) and an optional `result` value.\n* `callback(err, results)` - An optional callback to run once all the functions\n  have completed successfully. This function gets a results array (or object) containing all\n  the result arguments passed to the task callbacks.\n\n__Example__\n\n```js\nasync.parallel([\n    function(callback){\n        setTimeout(function(){\n            callback(null, \'one\');\n        }, 200);\n    },\n    function(callback){\n        setTimeout(function(){\n            callback(null, \'two\');\n        }, 100);\n    }\n],\n// optional callback\nfunction(err, results){\n    // the results array will equal [\'one\',\'two\'] even though\n    // the second function had a shorter timeout.\n});\n\n\n// an example using an object instead of an array\nasync.parallel({\n    one: function(callback){\n        setTimeout(function(){\n            callback(null, 1);\n        }, 200);\n    },\n    two: function(callback){\n        setTimeout(function(){\n            callback(null, 2);\n        }, 100);\n    }\n},\nfunction(err, results) {\n    // results is now equals to: {one: 1, two: 2}\n});\n```\n\n__Related__\n\n* parallelLimit(tasks, limit, [callback])\n\n---------------------------------------\n\n<a name="whilst" />\n### whilst(test, fn, callback)\n\nRepeatedly call `fn`, while `test` returns `true`. Calls `callback` when stopped,\nor an error occurs.\n\n__Arguments__\n\n* `test()` - synchronous truth test to perform before each execution of `fn`.\n* `fn(callback)` - A function which is called each time `test` passes. The function is\n  passed a `callback(err)`, which must be called once it has completed with an\n  optional `err` argument.\n* `callback(err, [results])` - A callback which is called after the test\n  function has failed and repeated execution of `fn` has stopped. `callback`\n  will be passed an error and any arguments passed to the final `fn`\'s callback.\n\n__Example__\n\n```js\nvar count = 0;\n\nasync.whilst(\n    function () { return count < 5; },\n    function (callback) {\n        count++;\n        setTimeout(function () {\n            callback(null, count);\n        }, 1000);\n    },\n    function (err, n) {\n        // 5 seconds have passed, n = 5\n    }\n);\n```\n\n---------------------------------------\n\n<a name="doWhilst" />\n### doWhilst(fn, test, callback)\n\nThe post-check version of [`whilst`](#whilst). To reflect the difference in\nthe order of operations, the arguments `test` and `fn` are switched.\n\n`doWhilst` is to `whilst` as `do while` is to `while` in plain JavaScript.\n\n---------------------------------------\n\n<a name="until" />\n### until(test, fn, callback)\n\nRepeatedly call `fn` until `test` returns `true`. Calls `callback` when stopped,\nor an error occurs. `callback` will be passed an error and any arguments passed\nto the final `fn`\'s callback.\n\nThe inverse of [`whilst`](#whilst).\n\n---------------------------------------\n\n<a name="doUntil" />\n### doUntil(fn, test, callback)\n\nLike [`doWhilst`](#doWhilst), except the `test` is inverted. Note the argument ordering differs from `until`.\n\n---------------------------------------\n\n<a name="during" />\n### during(test, fn, callback)\n\nLike [`whilst`](#whilst), except the `test` is an asynchronous function that is passed a callback in the form of `function (err, truth)`. If error is passed to `test` or `fn`, the main callback is immediately called with the value of the error.\n\n__Example__\n\n```js\nvar count = 0;\n\nasync.during(\n    function (callback) {\n      return callback(null, count < 5);\n    },\n    function (callback) {\n        count++;\n        setTimeout(callback, 1000);\n    },\n    function (err) {\n        // 5 seconds have passed\n    }\n);\n```\n\n---------------------------------------\n\n<a name="doDuring" />\n### doDuring(fn, test, callback)\n\nThe post-check version of [`during`](#during). To reflect the difference in\nthe order of operations, the arguments `test` and `fn` are switched.\n\nAlso a version of [`doWhilst`](#doWhilst) with asynchronous `test` function.\n\n---------------------------------------\n\n<a name="forever" />\n### forever(fn, [errback])\n\nCalls the asynchronous function `fn` with a callback parameter that allows it to\ncall itself again, in series, indefinitely.\n\nIf an error is passed to the callback then `errback` is called with the\nerror, and execution stops, otherwise it will never be called.\n\n```js\nasync.forever(\n    function(next) {\n        // next is suitable for passing to things that need a callback(err [, whatever]);\n        // it will result in this function being called again.\n    },\n    function(err) {\n        // if next is called with a value in its first parameter, it will appear\n        // in here as \'err\', and execution will stop.\n    }\n);\n```\n\n---------------------------------------\n\n<a name="waterfall" />\n### waterfall(tasks, [callback])\n\nRuns the `tasks` array of functions in series, each passing their results to the next in\nthe array. However, if any of the `tasks` pass an error to their own callback, the\nnext function is not executed, and the main `callback` is immediately called with\nthe error.\n\n__Arguments__\n\n* `tasks` - An array of functions to run, each function is passed a\n  `callback(err, result1, result2, ...)` it must call on completion. The first\n  argument is an error (which can be `null`) and any further arguments will be\n  passed as arguments in order to the next task.\n* `callback(err, [results])` - An optional callback to run once all the functions\n  have completed. This will be passed the results of the last task\'s callback.\n\n\n\n__Example__\n\n```js\nasync.waterfall([\n    function(callback) {\n        callback(null, \'one\', \'two\');\n    },\n    function(arg1, arg2, callback) {\n      // arg1 now equals \'one\' and arg2 now equals \'two\'\n        callback(null, \'three\');\n    },\n    function(arg1, callback) {\n        // arg1 now equals \'three\'\n        callback(null, \'done\');\n    }\n], function (err, result) {\n    // result now equals \'done\'\n});\n```\nOr, with named functions:\n\n```js\nasync.waterfall([\n    myFirstFunction,\n    mySecondFunction,\n    myLastFunction,\n], function (err, result) {\n    // result now equals \'done\'\n});\nfunction myFirstFunction(callback) {\n  callback(null, \'one\', \'two\');\n}\nfunction mySecondFunction(arg1, arg2, callback) {\n  // arg1 now equals \'one\' and arg2 now equals \'two\'\n  callback(null, \'three\');\n}\nfunction myLastFunction(arg1, callback) {\n  // arg1 now equals \'three\'\n  callback(null, \'done\');\n}\n```\n\nOr, if you need to pass any argument to the first function:\n\n```js\nasync.waterfall([\n    async.apply(myFirstFunction, \'zero\'),\n    mySecondFunction,\n    myLastFunction,\n], function (err, result) {\n    // result now equals \'done\'\n});\nfunction myFirstFunction(arg1, callback) {\n  // arg1 now equals \'zero\'\n  callback(null, \'one\', \'two\');\n}\nfunction mySecondFunction(arg1, arg2, callback) {\n  // arg1 now equals \'one\' and arg2 now equals \'two\'\n  callback(null, \'three\');\n}\nfunction myLastFunction(arg1, callback) {\n  // arg1 now equals \'three\'\n  callback(null, \'done\');\n}\n```\n\n---------------------------------------\n<a name="compose" />\n### compose(fn1, fn2...)\n\nCreates a function which is a composition of the passed asynchronous\nfunctions. Each function consumes the return value of the function that\nfollows. Composing functions `f()`, `g()`, and `h()` would produce the result of\n`f(g(h()))`, only this version uses callbacks to obtain the return values.\n\nEach function is executed with the `this` binding of the composed function.\n\n__Arguments__\n\n* `functions...` - the asynchronous functions to compose\n\n\n__Example__\n\n```js\nfunction add1(n, callback) {\n    setTimeout(function () {\n        callback(null, n + 1);\n    }, 10);\n}\n\nfunction mul3(n, callback) {\n    setTimeout(function () {\n        callback(null, n * 3);\n    }, 10);\n}\n\nvar add1mul3 = async.compose(mul3, add1);\n\nadd1mul3(4, function (err, result) {\n   // result now equals 15\n});\n```\n\n---------------------------------------\n<a name="seq" />\n### seq(fn1, fn2...)\n\nVersion of the compose function that is more natural to read.\nEach function consumes the return value of the previous function.\nIt is the equivalent of [`compose`](#compose) with the arguments reversed.\n\nEach function is executed with the `this` binding of the composed function.\n\n__Arguments__\n\n* `functions...` - the asynchronous functions to compose\n\n\n__Example__\n\n```js\n// Requires lodash (or underscore), express3 and dresende\'s orm2.\n// Part of an app, that fetches cats of the logged user.\n// This example uses `seq` function to avoid overnesting and error\n// handling clutter.\napp.get(\'/cats\', function(request, response) {\n  var User = request.models.User;\n  async.seq(\n    _.bind(User.get, User),  // \'User.get\' has signature (id, callback(err, data))\n    function(user, fn) {\n      user.getCats(fn);      // \'getCats\' has signature (callback(err, data))\n    }\n  )(req.session.user_id, function (err, cats) {\n    if (err) {\n      console.error(err);\n      response.json({ status: \'error\', message: err.message });\n    } else {\n      response.json({ status: \'ok\', message: \'Cats found\', data: cats });\n    }\n  });\n});\n```\n\n---------------------------------------\n<a name="applyEach" />\n### applyEach(fns, args..., callback)\n\nApplies the provided arguments to each function in the array, calling\n`callback` after all functions have completed. If you only provide the first\nargument, then it will return a function which lets you pass in the\narguments as if it were a single function call.\n\n__Arguments__\n\n* `fns` - the asynchronous functions to all call with the same arguments\n* `args...` - any number of separate arguments to pass to the function\n* `callback` - the final argument should be the callback, called when all\n  functions have completed processing\n\n\n__Example__\n\n```js\nasync.applyEach([enableSearch, updateSchema], \'bucket\', callback);\n\n// partial application example:\nasync.each(\n    buckets,\n    async.applyEach([enableSearch, updateSchema]),\n    callback\n);\n```\n\n__Related__\n\n* applyEachSeries(tasks, args..., [callback])\n\n---------------------------------------\n\n<a name="queue" />\n### queue(worker, [concurrency])\n\nCreates a `queue` object with the specified `concurrency`. Tasks added to the\n`queue` are processed in parallel (up to the `concurrency` limit). If all\n`worker`s are in progress, the task is queued until one becomes available.\nOnce a `worker` completes a `task`, that `task`\'s callback is called.\n\n__Arguments__\n\n* `worker(task, callback)` - An asynchronous function for processing a queued\n  task, which must call its `callback(err)` argument when finished, with an\n  optional `error` as an argument.  If you want to handle errors from an individual task, pass a callback to `q.push()`.\n* `concurrency` - An `integer` for determining how many `worker` functions should be\n  run in parallel.  If omitted, the concurrency defaults to `1`.  If the concurrency is `0`, an error is thrown.\n\n__Queue objects__\n\nThe `queue` object returned by this function has the following properties and\nmethods:\n\n* `length()` - a function returning the number of items waiting to be processed.\n* `started` - a function returning whether or not any items have been pushed and processed by the queue\n* `running()` - a function returning the number of items currently being processed.\n* `workersList()` - a function returning the array of items currently being processed.\n* `idle()` - a function returning false if there are items waiting or being processed, or true if not.\n* `concurrency` - an integer for determining how many `worker` functions should be\n  run in parallel. This property can be changed after a `queue` is created to\n  alter the concurrency on-the-fly.\n* `push(task, [callback])` - add a new task to the `queue`. Calls `callback` once\n  the `worker` has finished processing the task. Instead of a single task, a `tasks` array\n  can be submitted. The respective callback is used for every task in the list.\n* `unshift(task, [callback])` - add a new task to the front of the `queue`.\n* `saturated` - a callback that is called when the `queue` length hits the `concurrency` limit,\n   and further tasks will be queued.\n* `empty` - a callback that is called when the last item from the `queue` is given to a `worker`.\n* `drain` - a callback that is called when the last item from the `queue` has returned from the `worker`.\n* `paused` - a boolean for determining whether the queue is in a paused state\n* `pause()` - a function that pauses the processing of tasks until `resume()` is called.\n* `resume()` - a function that resumes the processing of queued tasks when the queue is paused.\n* `kill()` - a function that removes the `drain` callback and empties remaining tasks from the queue forcing it to go idle.\n\n__Example__\n\n```js\n// create a queue object with concurrency 2\n\nvar q = async.queue(function (task, callback) {\n    console.log(\'hello \' + task.name);\n    callback();\n}, 2);\n\n\n// assign a callback\nq.drain = function() {\n    console.log(\'all items have been processed\');\n}\n\n// add some items to the queue\n\nq.push({name: \'foo\'}, function (err) {\n    console.log(\'finished processing foo\');\n});\nq.push({name: \'bar\'}, function (err) {\n    console.log(\'finished processing bar\');\n});\n\n// add some items to the queue (batch-wise)\n\nq.push([{name: \'baz\'},{name: \'bay\'},{name: \'bax\'}], function (err) {\n    console.log(\'finished processing item\');\n});\n\n// add some items to the front of the queue\n\nq.unshift({name: \'bar\'}, function (err) {\n    console.log(\'finished processing bar\');\n});\n```\n\n\n---------------------------------------\n\n<a name="priorityQueue" />\n### priorityQueue(worker, concurrency)\n\nThe same as [`queue`](#queue) only tasks are assigned a priority and completed in ascending priority order. There are two differences between `queue` and `priorityQueue` objects:\n\n* `push(task, priority, [callback])` - `priority` should be a number. If an array of\n  `tasks` is given, all tasks will be assigned the same priority.\n* The `unshift` method was removed.\n\n---------------------------------------\n\n<a name="cargo" />\n### cargo(worker, [payload])\n\nCreates a `cargo` object with the specified payload. Tasks added to the\ncargo will be processed altogether (up to the `payload` limit). If the\n`worker` is in progress, the task is queued until it becomes available. Once\nthe `worker` has completed some tasks, each callback of those tasks is called.\nCheck out [these](https://camo.githubusercontent.com/6bbd36f4cf5b35a0f11a96dcd2e97711ffc2fb37/68747470733a2f2f662e636c6f75642e6769746875622e636f6d2f6173736574732f313637363837312f36383130382f62626330636662302d356632392d313165322d393734662d3333393763363464633835382e676966) [animations](https://camo.githubusercontent.com/f4810e00e1c5f5f8addbe3e9f49064fd5d102699/68747470733a2f2f662e636c6f75642e6769746875622e636f6d2f6173736574732f313637363837312f36383130312f38346339323036362d356632392d313165322d383134662d3964336430323431336266642e676966) for how `cargo` and `queue` work.\n\nWhile [queue](#queue) passes only one task to one of a group of workers\nat a time, cargo passes an array of tasks to a single worker, repeating\nwhen the worker is finished.\n\n__Arguments__\n\n* `worker(tasks, callback)` - An asynchronous function for processing an array of\n  queued tasks, which must call its `callback(err)` argument when finished, with\n  an optional `err` argument.\n* `payload` - An optional `integer` for determining how many tasks should be\n  processed per round; if omitted, the default is unlimited.\n\n__Cargo objects__\n\nThe `cargo` object returned by this function has the following properties and\nmethods:\n\n* `length()` - A function returning the number of items waiting to be processed.\n* `payload` - An `integer` for determining how many tasks should be\n  process per round. This property can be changed after a `cargo` is created to\n  alter the payload on-the-fly.\n* `push(task, [callback])` - Adds `task` to the `queue`. The callback is called\n  once the `worker` has finished processing the task. Instead of a single task, an array of `tasks`\n  can be submitted. The respective callback is used for every task in the list.\n* `saturated` - A callback that is called when the `queue.length()` hits the concurrency and further tasks will be queued.\n* `empty` - A callback that is called when the last item from the `queue` is given to a `worker`.\n* `drain` - A callback that is called when the last item from the `queue` has returned from the `worker`.\n* `idle()`, `pause()`, `resume()`, `kill()` - cargo inherits all of the same methods and event calbacks as [`queue`](#queue)\n\n__Example__\n\n```js\n// create a cargo object with payload 2\n\nvar cargo = async.cargo(function (tasks, callback) {\n    for(var i=0; i<tasks.length; i++){\n      console.log(\'hello \' + tasks[i].name);\n    }\n    callback();\n}, 2);\n\n\n// add some items\n\ncargo.push({name: \'foo\'}, function (err) {\n    console.log(\'finished processing foo\');\n});\ncargo.push({name: \'bar\'}, function (err) {\n    console.log(\'finished processing bar\');\n});\ncargo.push({name: \'baz\'}, function (err) {\n    console.log(\'finished processing baz\');\n});\n```\n\n---------------------------------------\n\n<a name="auto" />\n### auto(tasks, [concurrency], [callback])\n\nDetermines the best order for running the functions in `tasks`, based on their requirements. Each function can optionally depend on other functions being completed first, and each function is run as soon as its requirements are satisfied.\n\nIf any of the functions pass an error to their callback, the `auto` sequence will stop. Further tasks will not execute (so any other functions depending on it will not run), and the main `callback` is immediately called with the error.  Functions also receive an object containing the results of functions which have completed so far.\n\nNote, all functions are called with a `results` object as a second argument,\nso it is unsafe to pass functions in the `tasks` object which cannot handle the\nextra argument.\n\nFor example, this snippet of code:\n\n```js\nasync.auto({\n  readData: async.apply(fs.readFile, \'data.txt\', \'utf-8\')\n}, callback);\n```\n\nwill have the effect of calling `readFile` with the results object as the last\nargument, which will fail:\n\n```js\nfs.readFile(\'data.txt\', \'utf-8\', cb, {});\n```\n\nInstead, wrap the call to `readFile` in a function which does not forward the\n`results` object:\n\n```js\nasync.auto({\n  readData: function(cb, results){\n    fs.readFile(\'data.txt\', \'utf-8\', cb);\n  }\n}, callback);\n```\n\n__Arguments__\n\n* `tasks` - An object. Each of its properties is either a function or an array of\n  requirements, with the function itself the last item in the array. The object\'s key\n  of a property serves as the name of the task defined by that property,\n  i.e. can be used when specifying requirements for other tasks.\n  The function receives two arguments: (1) a `callback(err, result)` which must be\n  called when finished, passing an `error` (which can be `null`) and the result of\n  the function\'s execution, and (2) a `results` object, containing the results of\n  the previously executed functions.\n* `concurrency` - An optional `integer` for determining the maximum number of tasks that can be run in parallel. By default, as many as possible.\n* `callback(err, results)` - An optional callback which is called when all the\n  tasks have been completed. It receives the `err` argument if any `tasks`\n  pass an error to their callback. Results are always returned; however, if\n  an error occurs, no further `tasks` will be performed, and the results\n  object will only contain partial results.\n\n\n__Example__\n\n```js\nasync.auto({\n    get_data: function(callback){\n        console.log(\'in get_data\');\n        // async code to get some data\n        callback(null, \'data\', \'converted to array\');\n    },\n    make_folder: function(callback){\n        console.log(\'in make_folder\');\n        // async code to create a directory to store a file in\n        // this is run at the same time as getting the data\n        callback(null, \'folder\');\n    },\n    write_file: [\'get_data\', \'make_folder\', function(callback, results){\n        console.log(\'in write_file\', JSON.stringify(results));\n        // once there is some data and the directory exists,\n        // write the data to a file in the directory\n        callback(null, \'filename\');\n    }],\n    email_link: [\'write_file\', function(callback, results){\n        console.log(\'in email_link\', JSON.stringify(results));\n        // once the file is written let\'s email a link to it...\n        // results.write_file contains the filename returned by write_file.\n        callback(null, {\'file\':results.write_file, \'email\':\'user@example.com\'});\n    }]\n}, function(err, results) {\n    console.log(\'err = \', err);\n    console.log(\'results = \', results);\n});\n```\n\nThis is a fairly trivial example, but to do this using the basic parallel and\nseries functions would look like this:\n\n```js\nasync.parallel([\n    function(callback){\n        console.log(\'in get_data\');\n        // async code to get some data\n        callback(null, \'data\', \'converted to array\');\n    },\n    function(callback){\n        console.log(\'in make_folder\');\n        // async code to create a directory to store a file in\n        // this is run at the same time as getting the data\n        callback(null, \'folder\');\n    }\n],\nfunction(err, results){\n    async.series([\n        function(callback){\n            console.log(\'in write_file\', JSON.stringify(results));\n            // once there is some data and the directory exists,\n            // write the data to a file in the directory\n            results.push(\'filename\');\n            callback(null);\n        },\n        function(callback){\n            console.log(\'in email_link\', JSON.stringify(results));\n            // once the file is written let\'s email a link to it...\n            callback(null, {\'file\':results.pop(), \'email\':\'user@example.com\'});\n        }\n    ]);\n});\n```\n\nFor a complicated series of `async` tasks, using the [`auto`](#auto) function makes adding\nnew tasks much easier (and the code more readable).\n\n\n---------------------------------------\n\n<a name="retry" />\n### retry([opts = {times: 5, interval: 0}| 5], task, [callback])\n\nAttempts to get a successful response from `task` no more than `times` times before\nreturning an error. If the task is successful, the `callback` will be passed the result\nof the successful task. If all attempts fail, the callback will be passed the error and\nresult (if any) of the final attempt.\n\n__Arguments__\n\n* `opts` - Can be either an object with `times` and `interval` or a number.\n  * `times` - The number of attempts to make before giving up.  The default is `5`.\n  * `interval` - The time to wait between retries, in milliseconds.  The default is `0`.\n  * If `opts` is a number, the number specifies the number of times to retry, with the default interval of `0`. \n* `task(callback, results)` - A function which receives two arguments: (1) a `callback(err, result)`\n  which must be called when finished, passing `err` (which can be `null`) and the `result` of\n  the function\'s execution, and (2) a `results` object, containing the results of\n  the previously executed functions (if nested inside another control flow).\n* `callback(err, results)` - An optional callback which is called when the\n  task has succeeded, or after the final failed attempt. It receives the `err` and `result` arguments of the last attempt at completing the `task`.\n\nThe [`retry`](#retry) function can be used as a stand-alone control flow by passing a callback, as shown below:\n\n```js\n// try calling apiMethod 3 times\nasync.retry(3, apiMethod, function(err, result) {\n    // do something with the result\n});\n```\n\n```js\n// try calling apiMethod 3 times, waiting 200 ms between each retry \nasync.retry({times: 3, interval: 200}, apiMethod, function(err, result) {\n    // do something with the result\n});\n```\n\n```js\n// try calling apiMethod the default 5 times no delay between each retry \nasync.retry(apiMethod, function(err, result) {\n    // do something with the result\n});\n```\n\nIt can also be embedded within other control flow functions to retry individual methods\nthat are not as reliable, like this:\n\n```js\nasync.auto({\n    users: api.getUsers.bind(api),\n    payments: async.retry(3, api.getPayments.bind(api))\n}, function(err, results) {\n  // do something with the results\n});\n```\n\n\n---------------------------------------\n\n<a name="iterator" />\n### iterator(tasks)\n\nCreates an iterator function which calls the next function in the `tasks` array,\nreturning a continuation to call the next one after that. It\'s also possible to\n“peek” at the next iterator with `iterator.next()`.\n\nThis function is used internally by the `async` module, but can be useful when\nyou want to manually control the flow of functions in series.\n\n__Arguments__\n\n* `tasks` - An array of functions to run.\n\n__Example__\n\n```js\nvar iterator = async.iterator([\n    function(){ sys.p(\'one\'); },\n    function(){ sys.p(\'two\'); },\n    function(){ sys.p(\'three\'); }\n]);\n\nnode> var iterator2 = iterator();\n\'one\'\nnode> var iterator3 = iterator2();\n\'two\'\nnode> iterator3();\n\'three\'\nnode> var nextfn = iterator2.next();\nnode> nextfn();\n\'three\'\n```\n\n---------------------------------------\n\n<a name="apply" />\n### apply(function, arguments..)\n\nCreates a continuation function with some arguments already applied.\n\nUseful as a shorthand when combined with other control flow functions. Any arguments\npassed to the returned function are added to the arguments originally passed\nto apply.\n\n__Arguments__\n\n* `function` - The function you want to eventually apply all arguments to.\n* `arguments...` - Any number of arguments to automatically apply when the\n  continuation is called.\n\n__Example__\n\n```js\n// using apply\n\nasync.parallel([\n    async.apply(fs.writeFile, \'testfile1\', \'test1\'),\n    async.apply(fs.writeFile, \'testfile2\', \'test2\'),\n]);\n\n\n// the same process without using apply\n\nasync.parallel([\n    function(callback){\n        fs.writeFile(\'testfile1\', \'test1\', callback);\n    },\n    function(callback){\n        fs.writeFile(\'testfile2\', \'test2\', callback);\n    }\n]);\n```\n\nIt\'s possible to pass any number of additional arguments when calling the\ncontinuation:\n\n```js\nnode> var fn = async.apply(sys.puts, \'one\');\nnode> fn(\'two\', \'three\');\none\ntwo\nthree\n```\n\n---------------------------------------\n\n<a name="nextTick" />\n### nextTick(callback), setImmediate(callback)\n\nCalls `callback` on a later loop around the event loop. In Node.js this just\ncalls `process.nextTick`; in the browser it falls back to `setImmediate(callback)`\nif available, otherwise `setTimeout(callback, 0)`, which means other higher priority\nevents may precede the execution of `callback`.\n\nThis is used internally for browser-compatibility purposes.\n\n__Arguments__\n\n* `callback` - The function to call on a later loop around the event loop.\n\n__Example__\n\n```js\nvar call_order = [];\nasync.nextTick(function(){\n    call_order.push(\'two\');\n    // call_order now equals [\'one\',\'two\']\n});\ncall_order.push(\'one\')\n```\n\n<a name="times" />\n### times(n, iterator, [callback])\n\nCalls the `iterator` function `n` times, and accumulates results in the same manner\nyou would use with [`map`](#map).\n\n__Arguments__\n\n* `n` - The number of times to run the function.\n* `iterator` - The function to call `n` times.\n* `callback` - see [`map`](#map)\n\n__Example__\n\n```js\n// Pretend this is some complicated async factory\nvar createUser = function(id, callback) {\n  callback(null, {\n    id: \'user\' + id\n  })\n}\n// generate 5 users\nasync.times(5, function(n, next){\n    createUser(n, function(err, user) {\n      next(err, user)\n    })\n}, function(err, users) {\n  // we should now have 5 users\n});\n```\n\n__Related__\n\n* timesSeries(n, iterator, [callback])\n* timesLimit(n, limit, iterator, [callback])\n\n\n## Utils\n\n<a name="memoize" />\n### memoize(fn, [hasher])\n\nCaches the results of an `async` function. When creating a hash to store function\nresults against, the callback is omitted from the hash and an optional hash\nfunction can be used.\n\nIf no hash function is specified, the first argument is used as a hash key, which may work reasonably if it is a string or a data type that converts to a distinct string. Note that objects and arrays will not behave reasonably. Neither will cases where the other arguments are significant. In such cases, specify your own hash function.\n\nThe cache of results is exposed as the `memo` property of the function returned\nby `memoize`.\n\n__Arguments__\n\n* `fn` - The function to proxy and cache results from.\n* `hasher` - An optional function for generating a custom hash for storing\n  results. It has all the arguments applied to it apart from the callback, and\n  must be synchronous.\n\n__Example__\n\n```js\nvar slow_fn = function (name, callback) {\n    // do something\n    callback(null, result);\n};\nvar fn = async.memoize(slow_fn);\n\n// fn can now be used as if it were slow_fn\nfn(\'some name\', function () {\n    // callback\n});\n```\n\n<a name="unmemoize" />\n### unmemoize(fn)\n\nUndoes a [`memoize`](#memoize)d function, reverting it to the original, unmemoized\nform. Handy for testing.\n\n__Arguments__\n\n* `fn` - the memoized function\n\n---------------------------------------\n\n<a name="ensureAsync" />\n### ensureAsync(fn)\n\nWrap an async function and ensure it calls its callback on a later tick of the event loop.  If the function already calls its callback on a next tick, no extra deferral is added. This is useful for preventing stack overflows (`RangeError: Maximum call stack size exceeded`) and generally keeping [Zalgo](http://blog.izs.me/post/59142742143/designing-apis-for-asynchrony) contained.\n\n__Arguments__\n\n* `fn` - an async function, one that expects a node-style callback as its last argument\n\nReturns a wrapped function with the exact same call signature as the function passed in.\n\n__Example__\n\n```js\nfunction sometimesAsync(arg, callback) {\n  if (cache[arg]) {\n    return callback(null, cache[arg]); // this would be synchronous!!\n  } else {\n    doSomeIO(arg, callback); // this IO would be asynchronous\n  }\n}\n\n// this has a risk of stack overflows if many results are cached in a row\nasync.mapSeries(args, sometimesAsync, done);\n\n// this will defer sometimesAsync\'s callback if necessary,\n// preventing stack overflows\nasync.mapSeries(args, async.ensureAsync(sometimesAsync), done);\n\n```\n\n---------------------------------------\n\n<a name="constant">\n### constant(values...)\n\nReturns a function that when called, calls-back with the values provided.  Useful as the first function in a `waterfall`, or for plugging values in to `auto`.\n\n__Example__\n\n```js\nasync.waterfall([\n  async.constant(42),\n  function (value, next) {\n    // value === 42\n  },\n  //...\n], callback);\n\nasync.waterfall([\n  async.constant(filename, "utf8"),\n  fs.readFile,\n  function (fileData, next) {\n    //...\n  }\n  //...\n], callback);\n\nasync.auto({\n  hostname: async.constant("https://server.net/"),\n  port: findFreePort,\n  launchServer: ["hostname", "port", function (cb, options) {\n    startServer(options, cb);\n  }],\n  //...\n}, callback);\n\n```\n\n---------------------------------------\n\n<a name="asyncify">\n<a name="wrapSync">\n### asyncify(func)\n\n__Alias:__ `wrapSync`\n\nTake a sync function and make it async, passing its return value to a callback. This is useful for plugging sync functions into a waterfall, series, or other async functions. Any arguments passed to the generated function will be passed to the wrapped function (except for the final callback argument). Errors thrown will be passed to the callback.\n\n__Example__\n\n```js\nasync.waterfall([\n  async.apply(fs.readFile, filename, "utf8"),\n  async.asyncify(JSON.parse),\n  function (data, next) {\n    // data is the result of parsing the text.\n    // If there was a parsing error, it would have been caught.\n  }\n], callback)\n```\n\nIf the function passed to `asyncify` returns a Promise, that promises\'s resolved/rejected state will be used to call the callback, rather than simply the synchronous return value.  Example:\n\n```js\nasync.waterfall([\n  async.apply(fs.readFile, filename, "utf8"),\n  async.asyncify(function (contents) {\n    return db.model.create(contents);\n  }),\n  function (model, next) {\n    // `model` is the instantiated model object. \n    // If there was an error, this function would be skipped.\n  }\n], callback)\n```\n\nThis also means you can asyncify ES2016 `async` functions.\n\n```js\nvar q = async.queue(async.asyncify(async function (file) {\n  var intermediateStep = await processFile(file);\n  return await somePromise(intermediateStep)\n}));\n\nq.push(files);\n```\n\n---------------------------------------\n\n<a name="log" />\n### log(function, arguments)\n\nLogs the result of an `async` function to the `console`. Only works in Node.js or\nin browsers that support `console.log` and `console.error` (such as FF and Chrome).\nIf multiple arguments are returned from the async function, `console.log` is\ncalled on each argument in order.\n\n__Arguments__\n\n* `function` - The function you want to eventually apply all arguments to.\n* `arguments...` - Any number of arguments to apply to the function.\n\n__Example__\n\n```js\nvar hello = function(name, callback){\n    setTimeout(function(){\n        callback(null, \'hello \' + name);\n    }, 1000);\n};\n```\n```js\nnode> async.log(hello, \'world\');\n\'hello world\'\n```\n\n---------------------------------------\n\n<a name="dir" />\n### dir(function, arguments)\n\nLogs the result of an `async` function to the `console` using `console.dir` to\ndisplay the properties of the resulting object. Only works in Node.js or\nin browsers that support `console.dir` and `console.error` (such as FF and Chrome).\nIf multiple arguments are returned from the async function, `console.dir` is\ncalled on each argument in order.\n\n__Arguments__\n\n* `function` - The function you want to eventually apply all arguments to.\n* `arguments...` - Any number of arguments to apply to the function.\n\n__Example__\n\n```js\nvar hello = function(name, callback){\n    setTimeout(function(){\n        callback(null, {hello: name});\n    }, 1000);\n};\n```\n```js\nnode> async.dir(hello, \'world\');\n{hello: \'world\'}\n```\n\n---------------------------------------\n\n<a name="noConflict" />\n### noConflict()\n\nChanges the value of `async` back to its original value, returning a reference to the\n`async` object.\n',
164 silly resolved     readmeFilename: 'README.md',
164 silly resolved     homepage: 'https://github.com/caolan/async',
164 silly resolved     _id: 'async@1.5.2',
164 silly resolved     _from: 'async@^1.4.0' },
164 silly resolved   { name: 'object-assign',
164 silly resolved     version: '4.1.0',
164 silly resolved     description: 'ES2015 Object.assign() ponyfill',
164 silly resolved     license: 'MIT',
164 silly resolved     repository:
164 silly resolved      { type: 'git',
164 silly resolved        url: 'https://github.com/sindresorhus/object-assign' },
164 silly resolved     author:
164 silly resolved      { name: 'Sindre Sorhus',
164 silly resolved        email: 'sindresorhus@gmail.com',
164 silly resolved        url: 'sindresorhus.com' },
164 silly resolved     engines: { node: '>=0.10.0' },
164 silly resolved     scripts: { test: 'xo && mocha', bench: 'matcha bench.js' },
164 silly resolved     files: [ 'index.js' ],
164 silly resolved     keywords:
164 silly resolved      [ 'object',
164 silly resolved        'assign',
164 silly resolved        'extend',
164 silly resolved        'properties',
164 silly resolved        'es2015',
164 silly resolved        'ecmascript',
164 silly resolved        'harmony',
164 silly resolved        'ponyfill',
164 silly resolved        'prollyfill',
164 silly resolved        'polyfill',
164 silly resolved        'shim',
164 silly resolved        'browser' ],
164 silly resolved     devDependencies: { lodash: '^4.8.2', matcha: '^0.7.0', mocha: '*', xo: '*' },
164 silly resolved     readme: '# object-assign [![Build Status](https://travis-ci.org/sindresorhus/object-assign.svg?branch=master)](https://travis-ci.org/sindresorhus/object-assign)\n\n> ES2015 [`Object.assign()`](http://www.2ality.com/2014/01/object-assign.html) ponyfill\n\n> Ponyfill: A polyfill that doesn\'t overwrite the native method\n\n\n## Install\n\n```\n$ npm install --save object-assign\n```\n\n\n## Usage\n\n```js\nconst objectAssign = require(\'object-assign\');\n\nobjectAssign({foo: 0}, {bar: 1});\n//=> {foo: 0, bar: 1}\n\n// multiple sources\nobjectAssign({foo: 0}, {bar: 1}, {baz: 2});\n//=> {foo: 0, bar: 1, baz: 2}\n\n// overwrites equal keys\nobjectAssign({foo: 0}, {foo: 1}, {foo: 2});\n//=> {foo: 2}\n\n// ignores null and undefined sources\nobjectAssign({foo: 0}, null, {bar: 1}, undefined);\n//=> {foo: 0, bar: 1}\n```\n\n\n## API\n\n### objectAssign(target, source, [source, ...])\n\nAssigns enumerable own properties of `source` objects to the `target` object and returns the `target` object. Additional `source` objects will overwrite previous ones.\n\n\n## Resources\n\n- [ES2015 spec - Object.assign](https://people.mozilla.org/~jorendorff/es6-draft.html#sec-object.assign)\n\n\n## Related\n\n- [deep-assign](https://github.com/sindresorhus/deep-assign) - Recursive `Object.assign()`\n\n\n## License\n\nMIT © [Sindre Sorhus](https://sindresorhus.com)\n',
164 silly resolved     readmeFilename: 'readme.md',
164 silly resolved     bugs: { url: 'https://github.com/sindresorhus/object-assign/issues' },
164 silly resolved     homepage: 'https://github.com/sindresorhus/object-assign',
164 silly resolved     _id: 'object-assign@4.1.0',
164 silly resolved     _from: 'object-assign@^4.0.1' } ]
165 info install loader-utils@0.2.15 into /home/supernever/gallery-by-react/gallery-by-react/node_modules/sass-loader
166 info install async@1.5.2 into /home/supernever/gallery-by-react/gallery-by-react/node_modules/sass-loader
167 info install object-assign@4.1.0 into /home/supernever/gallery-by-react/gallery-by-react/node_modules/sass-loader
168 info installOne loader-utils@0.2.15
169 info installOne async@1.5.2
170 info installOne object-assign@4.1.0
171 verbose node_modules/sass-loader/node_modules/loader-utils unbuild
172 verbose node_modules/sass-loader/node_modules/async unbuild
173 verbose node_modules/sass-loader/node_modules/object-assign unbuild
174 verbose tar unpack /home/supernever/.npm/loader-utils/0.2.15/package.tgz
175 silly lockFile 2e2bc0ef-loader-node-modules-loader-utils tar:///home/supernever/gallery-by-react/gallery-by-react/node_modules/sass-loader/node_modules/loader-utils
176 verbose lock tar:///home/supernever/gallery-by-react/gallery-by-react/node_modules/sass-loader/node_modules/loader-utils /home/supernever/.npm/2e2bc0ef-loader-node-modules-loader-utils.lock
177 silly lockFile e37922b8--loader-utils-0-2-15-package-tgz tar:///home/supernever/.npm/loader-utils/0.2.15/package.tgz
178 verbose lock tar:///home/supernever/.npm/loader-utils/0.2.15/package.tgz /home/supernever/.npm/e37922b8--loader-utils-0-2-15-package-tgz.lock
179 verbose tar unpack /home/supernever/.npm/async/1.5.2/package.tgz
180 silly lockFile d6b0587c-s-sass-loader-node-modules-async tar:///home/supernever/gallery-by-react/gallery-by-react/node_modules/sass-loader/node_modules/async
181 verbose lock tar:///home/supernever/gallery-by-react/gallery-by-react/node_modules/sass-loader/node_modules/async /home/supernever/.npm/d6b0587c-s-sass-loader-node-modules-async.lock
182 silly lockFile fa1ba011-ever-npm-async-1-5-2-package-tgz tar:///home/supernever/.npm/async/1.5.2/package.tgz
183 verbose lock tar:///home/supernever/.npm/async/1.5.2/package.tgz /home/supernever/.npm/fa1ba011-ever-npm-async-1-5-2-package-tgz.lock
184 verbose tar unpack /home/supernever/.npm/object-assign/4.1.0/package.tgz
185 silly lockFile 197f77b2-oader-node-modules-object-assign tar:///home/supernever/gallery-by-react/gallery-by-react/node_modules/sass-loader/node_modules/object-assign
186 verbose lock tar:///home/supernever/gallery-by-react/gallery-by-react/node_modules/sass-loader/node_modules/object-assign /home/supernever/.npm/197f77b2-oader-node-modules-object-assign.lock
187 silly lockFile 409fa9c5--object-assign-4-1-0-package-tgz tar:///home/supernever/.npm/object-assign/4.1.0/package.tgz
188 verbose lock tar:///home/supernever/.npm/object-assign/4.1.0/package.tgz /home/supernever/.npm/409fa9c5--object-assign-4-1-0-package-tgz.lock
189 silly gunzTarPerm modes [ '755', '644' ]
190 silly gunzTarPerm modes [ '755', '644' ]
191 silly gunzTarPerm modes [ '755', '644' ]
192 silly gunzTarPerm extractEntry package.json
193 silly gunzTarPerm extractEntry README.md
194 silly gunzTarPerm extractEntry dist/async.js
195 silly gunzTarPerm extractEntry dist/async.min.js
196 silly gunzTarPerm extractEntry lib/async.js
197 silly lockFile d6b0587c-s-sass-loader-node-modules-async tar:///home/supernever/gallery-by-react/gallery-by-react/node_modules/sass-loader/node_modules/async
198 silly lockFile d6b0587c-s-sass-loader-node-modules-async tar:///home/supernever/gallery-by-react/gallery-by-react/node_modules/sass-loader/node_modules/async
199 silly lockFile fa1ba011-ever-npm-async-1-5-2-package-tgz tar:///home/supernever/.npm/async/1.5.2/package.tgz
200 silly lockFile fa1ba011-ever-npm-async-1-5-2-package-tgz tar:///home/supernever/.npm/async/1.5.2/package.tgz
201 info preinstall async@1.5.2
202 verbose readDependencies using package.json deps
203 verbose readDependencies using package.json deps
204 silly resolved []
205 verbose about to build /home/supernever/gallery-by-react/gallery-by-react/node_modules/sass-loader/node_modules/async
206 info build /home/supernever/gallery-by-react/gallery-by-react/node_modules/sass-loader/node_modules/async
207 verbose linkStuff [ false,
207 verbose linkStuff   false,
207 verbose linkStuff   false,
207 verbose linkStuff   '/home/supernever/gallery-by-react/gallery-by-react/node_modules/sass-loader/node_modules' ]
208 info linkStuff async@1.5.2
209 verbose linkBins async@1.5.2
210 verbose linkMans async@1.5.2
211 verbose rebuildBundles async@1.5.2
212 silly gunzTarPerm extractEntry package.json
213 info install async@1.5.2
214 info postinstall async@1.5.2
215 silly gunzTarPerm extractEntry index.js
216 silly gunzTarPerm extractEntry readme.md
217 silly gunzTarPerm extractEntry package.json
218 silly gunzTarPerm extractEntry README.md
219 silly gunzTarPerm extractEntry index.js
220 silly lockFile 197f77b2-oader-node-modules-object-assign tar:///home/supernever/gallery-by-react/gallery-by-react/node_modules/sass-loader/node_modules/object-assign
221 silly lockFile 197f77b2-oader-node-modules-object-assign tar:///home/supernever/gallery-by-react/gallery-by-react/node_modules/sass-loader/node_modules/object-assign
222 silly lockFile 409fa9c5--object-assign-4-1-0-package-tgz tar:///home/supernever/.npm/object-assign/4.1.0/package.tgz
223 silly lockFile 409fa9c5--object-assign-4-1-0-package-tgz tar:///home/supernever/.npm/object-assign/4.1.0/package.tgz
224 info preinstall object-assign@4.1.0
225 verbose readDependencies using package.json deps
226 verbose readDependencies using package.json deps
227 silly resolved []
228 verbose about to build /home/supernever/gallery-by-react/gallery-by-react/node_modules/sass-loader/node_modules/object-assign
229 info build /home/supernever/gallery-by-react/gallery-by-react/node_modules/sass-loader/node_modules/object-assign
230 verbose linkStuff [ false,
230 verbose linkStuff   false,
230 verbose linkStuff   false,
230 verbose linkStuff   '/home/supernever/gallery-by-react/gallery-by-react/node_modules/sass-loader/node_modules' ]
231 info linkStuff object-assign@4.1.0
232 verbose linkBins object-assign@4.1.0
233 verbose linkMans object-assign@4.1.0
234 verbose rebuildBundles object-assign@4.1.0
235 info install object-assign@4.1.0
236 info postinstall object-assign@4.1.0
237 silly lockFile 2e2bc0ef-loader-node-modules-loader-utils tar:///home/supernever/gallery-by-react/gallery-by-react/node_modules/sass-loader/node_modules/loader-utils
238 silly lockFile 2e2bc0ef-loader-node-modules-loader-utils tar:///home/supernever/gallery-by-react/gallery-by-react/node_modules/sass-loader/node_modules/loader-utils
239 silly lockFile e37922b8--loader-utils-0-2-15-package-tgz tar:///home/supernever/.npm/loader-utils/0.2.15/package.tgz
240 silly lockFile e37922b8--loader-utils-0-2-15-package-tgz tar:///home/supernever/.npm/loader-utils/0.2.15/package.tgz
241 info preinstall loader-utils@0.2.15
242 verbose readDependencies using package.json deps
243 verbose readDependencies using package.json deps
244 verbose cache add [ 'big.js@^3.1.3', null ]
245 verbose cache add name=undefined spec="big.js@^3.1.3" args=["big.js@^3.1.3",null]
246 verbose parsed url { protocol: null,
246 verbose parsed url   slashes: null,
246 verbose parsed url   auth: null,
246 verbose parsed url   host: null,
246 verbose parsed url   port: null,
246 verbose parsed url   hostname: null,
246 verbose parsed url   hash: null,
246 verbose parsed url   search: null,
246 verbose parsed url   query: null,
246 verbose parsed url   pathname: 'big.js@^3.1.3',
246 verbose parsed url   path: 'big.js@^3.1.3',
246 verbose parsed url   href: 'big.js@^3.1.3' }
247 verbose cache add [ 'emojis-list@^2.0.0', null ]
248 verbose cache add name=undefined spec="emojis-list@^2.0.0" args=["emojis-list@^2.0.0",null]
249 verbose parsed url { protocol: null,
249 verbose parsed url   slashes: null,
249 verbose parsed url   auth: null,
249 verbose parsed url   host: null,
249 verbose parsed url   port: null,
249 verbose parsed url   hostname: null,
249 verbose parsed url   hash: null,
249 verbose parsed url   search: null,
249 verbose parsed url   query: null,
249 verbose parsed url   pathname: 'emojis-list@^2.0.0',
249 verbose parsed url   path: 'emojis-list@^2.0.0',
249 verbose parsed url   href: 'emojis-list@^2.0.0' }
250 verbose cache add name="big.js" spec="^3.1.3" args=["big.js","^3.1.3"]
251 verbose parsed url { protocol: null,
251 verbose parsed url   slashes: null,
251 verbose parsed url   auth: null,
251 verbose parsed url   host: null,
251 verbose parsed url   port: null,
251 verbose parsed url   hostname: null,
251 verbose parsed url   hash: null,
251 verbose parsed url   search: null,
251 verbose parsed url   query: null,
251 verbose parsed url   pathname: '^3.1.3',
251 verbose parsed url   path: '^3.1.3',
251 verbose parsed url   href: '^3.1.3' }
252 verbose addNamed [ 'big.js', '^3.1.3' ]
253 verbose addNamed [ null, '>=3.1.3-0 <4.0.0-0' ]
254 silly lockFile c249457e-big-js-3-1-3 big.js@^3.1.3
255 verbose lock big.js@^3.1.3 /home/supernever/.npm/c249457e-big-js-3-1-3.lock
256 verbose cache add [ 'json5@^0.5.0', null ]
257 verbose cache add name=undefined spec="json5@^0.5.0" args=["json5@^0.5.0",null]
258 verbose parsed url { protocol: null,
258 verbose parsed url   slashes: null,
258 verbose parsed url   auth: null,
258 verbose parsed url   host: null,
258 verbose parsed url   port: null,
258 verbose parsed url   hostname: null,
258 verbose parsed url   hash: null,
258 verbose parsed url   search: null,
258 verbose parsed url   query: null,
258 verbose parsed url   pathname: 'json5@^0.5.0',
258 verbose parsed url   path: 'json5@^0.5.0',
258 verbose parsed url   href: 'json5@^0.5.0' }
259 verbose cache add name="emojis-list" spec="^2.0.0" args=["emojis-list","^2.0.0"]
260 verbose parsed url { protocol: null,
260 verbose parsed url   slashes: null,
260 verbose parsed url   auth: null,
260 verbose parsed url   host: null,
260 verbose parsed url   port: null,
260 verbose parsed url   hostname: null,
260 verbose parsed url   hash: null,
260 verbose parsed url   search: null,
260 verbose parsed url   query: null,
260 verbose parsed url   pathname: '^2.0.0',
260 verbose parsed url   path: '^2.0.0',
260 verbose parsed url   href: '^2.0.0' }
261 verbose addNamed [ 'emojis-list', '^2.0.0' ]
262 verbose addNamed [ null, '>=2.0.0-0 <3.0.0-0' ]
263 silly lockFile 4ec8ad98-emojis-list-2-0-0 emojis-list@^2.0.0
264 verbose lock emojis-list@^2.0.0 /home/supernever/.npm/4ec8ad98-emojis-list-2-0-0.lock
265 verbose cache add name="json5" spec="^0.5.0" args=["json5","^0.5.0"]
266 verbose parsed url { protocol: null,
266 verbose parsed url   slashes: null,
266 verbose parsed url   auth: null,
266 verbose parsed url   host: null,
266 verbose parsed url   port: null,
266 verbose parsed url   hostname: null,
266 verbose parsed url   hash: null,
266 verbose parsed url   search: null,
266 verbose parsed url   query: null,
266 verbose parsed url   pathname: '^0.5.0',
266 verbose parsed url   path: '^0.5.0',
266 verbose parsed url   href: '^0.5.0' }
267 verbose addNamed [ 'json5', '^0.5.0' ]
268 verbose addNamed [ null, '>=0.5.0-0 <0.6.0-0' ]
269 silly lockFile ec37e122-json5-0-5-0 json5@^0.5.0
270 verbose lock json5@^0.5.0 /home/supernever/.npm/ec37e122-json5-0-5-0.lock
271 silly addNameRange { name: 'big.js', range: '>=3.1.3-0 <4.0.0-0', hasData: false }
272 silly addNameRange { name: 'emojis-list',
272 silly addNameRange   range: '>=2.0.0-0 <3.0.0-0',
272 silly addNameRange   hasData: false }
273 silly addNameRange { name: 'json5', range: '>=0.5.0-0 <0.6.0-0', hasData: false }
274 verbose request where is /big.js
275 verbose request registry https://registry.npmjs.org/
276 verbose url raw /big.js
277 verbose url resolving [ 'https://registry.npmjs.org/', './big.js' ]
278 verbose url resolved https://registry.npmjs.org/big.js
279 verbose request where is https://registry.npmjs.org/big.js
280 info trying registry request attempt 1 at 03:06:05
281 verbose etag "DJZ7VK1GW0V84QAVPNRVS4YKK"
282 http GET https://registry.npmjs.org/big.js
283 verbose request where is /emojis-list
284 verbose request registry https://registry.npmjs.org/
285 verbose url raw /emojis-list
286 verbose url resolving [ 'https://registry.npmjs.org/', './emojis-list' ]
287 verbose url resolved https://registry.npmjs.org/emojis-list
288 verbose request where is https://registry.npmjs.org/emojis-list
289 info trying registry request attempt 1 at 03:06:05
290 verbose etag "41EE0LRGH8QC2KIKKLC4B1J3"
291 http GET https://registry.npmjs.org/emojis-list
292 verbose request where is /json5
293 verbose request registry https://registry.npmjs.org/
294 verbose url raw /json5
295 verbose url resolving [ 'https://registry.npmjs.org/', './json5' ]
296 verbose url resolved https://registry.npmjs.org/json5
297 verbose request where is https://registry.npmjs.org/json5
298 info trying registry request attempt 1 at 03:06:05
299 verbose etag "4T89XTHOJX89E0H4NGVVB644I"
300 http GET https://registry.npmjs.org/json5
301 http 304 https://registry.npmjs.org/big.js
302 silly registry.get cb [ 304,
302 silly registry.get   { date: 'Tue, 17 May 2016 19:06:05 GMT',
302 silly registry.get     via: '1.1 varnish',
302 silly registry.get     'cache-control': 'max-age=300',
302 silly registry.get     etag: '"DJZ7VK1GW0V84QAVPNRVS4YKK"',
302 silly registry.get     age: '179',
302 silly registry.get     connection: 'keep-alive',
302 silly registry.get     'x-served-by': 'cache-itm7427-ITM',
302 silly registry.get     'x-cache': 'HIT',
302 silly registry.get     'x-cache-hits': '1',
302 silly registry.get     'x-timer': 'S1463511965.546795,VS0,VE0',
302 silly registry.get     vary: 'Accept-Encoding' } ]
303 verbose etag https://registry.npmjs.org/big.js from cache
304 http 304 https://registry.npmjs.org/emojis-list
305 silly registry.get cb [ 304,
305 silly registry.get   { date: 'Tue, 17 May 2016 19:06:05 GMT',
305 silly registry.get     via: '1.1 varnish',
305 silly registry.get     'cache-control': 'max-age=300',
305 silly registry.get     etag: '"41EE0LRGH8QC2KIKKLC4B1J3"',
305 silly registry.get     age: '179',
305 silly registry.get     connection: 'keep-alive',
305 silly registry.get     'x-served-by': 'cache-itm7421-ITM',
305 silly registry.get     'x-cache': 'HIT',
305 silly registry.get     'x-cache-hits': '1',
305 silly registry.get     'x-timer': 'S1463511965.557718,VS0,VE0',
305 silly registry.get     vary: 'Accept-Encoding' } ]
306 verbose etag https://registry.npmjs.org/emojis-list from cache
307 silly addNameRange number 2 { name: 'big.js', range: '>=3.1.3-0 <4.0.0-0', hasData: true }
308 silly addNameRange versions [ 'big.js',
308 silly addNameRange   [ '2.0.0',
308 silly addNameRange     '2.1.0',
308 silly addNameRange     '2.2.0',
308 silly addNameRange     '2.4.0',
308 silly addNameRange     '2.4.1',
308 silly addNameRange     '2.5.0',
308 silly addNameRange     '2.5.1',
308 silly addNameRange     '3.0.0',
308 silly addNameRange     '3.0.1',
308 silly addNameRange     '3.0.2',
308 silly addNameRange     '3.1.1',
308 silly addNameRange     '3.1.2',
308 silly addNameRange     '3.1.3' ] ]
309 verbose addNamed [ 'big.js', '3.1.3' ]
310 verbose addNamed [ '3.1.3', '3.1.3' ]
311 silly lockFile 43f62be2-big-js-3-1-3 big.js@3.1.3
312 verbose lock big.js@3.1.3 /home/supernever/.npm/43f62be2-big-js-3-1-3.lock
313 http 304 https://registry.npmjs.org/json5
314 silly registry.get cb [ 304,
314 silly registry.get   { date: 'Tue, 17 May 2016 19:06:05 GMT',
314 silly registry.get     via: '1.1 varnish',
314 silly registry.get     'cache-control': 'max-age=300',
314 silly registry.get     etag: '"4T89XTHOJX89E0H4NGVVB644I"',
314 silly registry.get     age: '131',
314 silly registry.get     connection: 'keep-alive',
314 silly registry.get     'x-served-by': 'cache-itm7425-ITM',
314 silly registry.get     'x-cache': 'HIT',
314 silly registry.get     'x-cache-hits': '1',
314 silly registry.get     'x-timer': 'S1463511965.563992,VS0,VE0',
314 silly registry.get     vary: 'Accept-Encoding' } ]
315 verbose etag https://registry.npmjs.org/json5 from cache
316 silly addNameRange number 2 { name: 'emojis-list',
316 silly addNameRange   range: '>=2.0.0-0 <3.0.0-0',
316 silly addNameRange   hasData: true }
317 silly addNameRange versions [ 'emojis-list',
317 silly addNameRange   [ '1.0.0', '1.0.1', '1.0.2', '1.0.3', '2.0.0', '2.0.1' ] ]
318 verbose addNamed [ 'emojis-list', '2.0.1' ]
319 verbose addNamed [ '2.0.1', '2.0.1' ]
320 silly lockFile 93481dfe-emojis-list-2-0-1 emojis-list@2.0.1
321 verbose lock emojis-list@2.0.1 /home/supernever/.npm/93481dfe-emojis-list-2-0-1.lock
322 silly addNameRange number 2 { name: 'json5', range: '>=0.5.0-0 <0.6.0-0', hasData: true }
323 silly addNameRange versions [ 'json5',
323 silly addNameRange   [ '0.0.0', '0.0.1', '0.1.0', '0.2.0', '0.4.0', '0.5.0' ] ]
324 verbose addNamed [ 'json5', '0.5.0' ]
325 verbose addNamed [ '0.5.0', '0.5.0' ]
326 silly lockFile 004f01ba-json5-0-5-0 json5@0.5.0
327 verbose lock json5@0.5.0 /home/supernever/.npm/004f01ba-json5-0-5-0.lock
328 silly lockFile 43f62be2-big-js-3-1-3 big.js@3.1.3
329 silly lockFile 43f62be2-big-js-3-1-3 big.js@3.1.3
330 silly lockFile c249457e-big-js-3-1-3 big.js@^3.1.3
331 silly lockFile c249457e-big-js-3-1-3 big.js@^3.1.3
332 silly lockFile 93481dfe-emojis-list-2-0-1 emojis-list@2.0.1
333 silly lockFile 93481dfe-emojis-list-2-0-1 emojis-list@2.0.1
334 silly lockFile 4ec8ad98-emojis-list-2-0-0 emojis-list@^2.0.0
335 silly lockFile 4ec8ad98-emojis-list-2-0-0 emojis-list@^2.0.0
336 silly lockFile 004f01ba-json5-0-5-0 json5@0.5.0
337 silly lockFile 004f01ba-json5-0-5-0 json5@0.5.0
338 silly lockFile ec37e122-json5-0-5-0 json5@^0.5.0
339 silly lockFile ec37e122-json5-0-5-0 json5@^0.5.0
340 silly resolved [ { name: 'big.js',
340 silly resolved     description: 'A small, fast, easy-to-use library for arbitrary-precision decimal arithmetic',
340 silly resolved     version: '3.1.3',
340 silly resolved     keywords:
340 silly resolved      [ 'arbitrary',
340 silly resolved        'precision',
340 silly resolved        'arithmetic',
340 silly resolved        'big',
340 silly resolved        'number',
340 silly resolved        'decimal',
340 silly resolved        'float',
340 silly resolved        'biginteger',
340 silly resolved        'bigdecimal',
340 silly resolved        'bignumber',
340 silly resolved        'bigint',
340 silly resolved        'bignum' ],
340 silly resolved     repository: { type: 'git', url: 'https://github.com/MikeMcl/big.js.git' },
340 silly resolved     main: './big',
340 silly resolved     author: { name: 'Michael Mclaughlin', email: 'M8ch88l@gmail.com' },
340 silly resolved     bugs: { url: 'https://github.com/MikeMcl/big.js/issues' },
340 silly resolved     engines: { node: '*' },
340 silly resolved     license: 'MIT',
340 silly resolved     scripts:
340 silly resolved      { test: 'node ./test/every-test.js',
340 silly resolved        build: 'uglifyjs -o ./big.min.js ./big.js' },
340 silly resolved     files: [ 'big.js', 'big.min.js' ],
340 silly resolved     readme: '\r\n# big.js #\r\n\r\nA small, fast JavaScript library for arbitrary-precision decimal arithmetic.\r\n\r\nThe little sister to [bignumber.js](https://github.com/MikeMcl/bignumber.js/).\r\nSee also [decimal.js](https://github.com/MikeMcl/decimal.js/), and [here](https://github.com/MikeMcl/big.js/wiki) for the difference between them.\r\n\r\n## Features\r\n\r\n  - Faster, smaller and easier-to-use than JavaScript versions of Java\'s BigDecimal\r\n  - Only 2.7 KB minified and gzipped\r\n  - Simple API\r\n  - Replicates the `toExponential`, `toFixed` and `toPrecision` methods of JavaScript\'s Number type\r\n  - Includes a `sqrt` method\r\n  - Stores values in an accessible decimal floating point format\r\n  - No dependencies\r\n  - Comprehensive [documentation](http://mikemcl.github.io/big.js/) and test set\r\n\r\n## Load\r\n\r\nThe library is the single JavaScript file *big.js* (or *big.min.js*, which is *big.js* minified).\r\n\r\nIt can be loaded via a script tag in an HTML document for the browser\r\n\r\n    <script src=\'./relative/path/to/big.js\'></script>\r\n\r\nor as a CommonJS, [Node.js](http://nodejs.org) or AMD module using `require`.\r\n\r\n    var Big = require(\'big.js\');\r\n\r\nFor Node.js, the library is available from the npm registry:\r\n\r\n    $ npm install big.js\r\n\r\n\r\n\r\n## Use\r\n\r\n*In all examples below, `var`, semicolons and `toString` calls are not shown.\r\nIf a commented-out value is in quotes it means `toString` has been called on the preceding expression.*\r\n\r\nThe library exports a single function: Big, the constructor of Big number instances.\r\nIt accepts a value of type Number, String or Big number Object.\r\n\r\n    x = new Big(123.4567)\r\n    y = Big(\'123456.7e-3\')             // \'new\' is optional\r\n    z = new Big(x)\r\n    x.eq(y) && x.eq(z) && y.eq(z)      // true\r\n\r\nA Big number is immutable in the sense that it is not changed by its methods.\r\n\r\n    0.3 - 0.1                          // 0.19999999999999998\r\n    x = new Big(0.3)\r\n    x.minus(0.1)                       // "0.2"\r\n    x                                  // "0.3"\r\n\r\nThe methods that return a Big number can be chained.\r\n\r\n    x.div(y).plus(z).times(9).minus(\'1.234567801234567e+8\').plus(976.54321).div(\'2598.11772\')\r\n    x.sqrt().div(y).pow(3).gt(y.mod(z))    // true\r\n\r\nLike JavaScript\'s Number type, there are `toExponential`, `toFixed` and `toPrecision` methods.\r\n\r\n    x = new Big(255.5)\r\n    x.toExponential(5)                 // "2.55500e+2"\r\n    x.toFixed(5)                       // "255.50000"\r\n    x.toPrecision(5)                   // "255.50"\r\n\r\nThe maximum number of decimal places and the rounding mode used to round the results of the `div`, `sqrt` and `pow`\r\n(with negative exponent) methods is determined by the value of the `DP` and `RM` properties of the `Big` number constructor.  \r\n\r\nThe other methods always give the exact result.  \r\n\r\n(From *v3.0.0*, multiple Big number constructors can be created, see Change Log below.)\r\n\r\n    Big.DP = 10\r\n    Big.RM = 1\r\n\r\n    x = new Big(2);\r\n    y = new Big(3);\r\n    z = x.div(y)                       // "0.6666666667"\r\n    z.sqrt()                           // "0.8164965809"\r\n    z.pow(-3)                          // "3.3749999995"\r\n    z.times(z)                         // "0.44444444448888888889"\r\n    z.times(z).round(10)               // "0.4444444445"\r\n\r\n\r\nThe value of a Big number is stored in a decimal floating point format in terms of a coefficient, exponent and sign.\r\n\r\n    x = new Big(-123.456);\r\n    x.c                                // [1,2,3,4,5,6]    coefficient (i.e. significand)\r\n    x.e                                // 2                exponent\r\n    x.s                                // -1               sign\r\n\r\nFor further information see the [API](http://mikemcl.github.io/big.js/) reference from the *doc* folder.\r\n\r\n## Test\r\n\r\nThe *test* directory contains the test scripts for each Big number method.\r\n\r\nThe tests can be run with Node or a browser.\r\n\r\nTo test a single method, from a command-line shell at the *test* directory, use e.g.\r\n\r\n    $ node toFixed\r\n\r\nTo test all the methods\r\n\r\n    $ node every-test\r\n\r\nFor the browser, see *single-test.html* and *every-test.html* in the *test/browser* directory.\r\n\r\n*big-vs-number.html* enables some of the methods of big.js to be compared with those of JavaScript\'s Number type.\r\n\r\n## Performance\r\n\r\nThe *perf* directory contains two applications and a *lib* directory containing the BigDecimal libraries used by both.\r\n\r\n*big-vs-bigdecimal.html* tests the performance of big.js against the JavaScript translations of two versions of BigDecimal, its use should be more or less self-explanatory.\r\n(The GWT version doesn\'t work in IE 6.)\r\n\r\n* GWT: java.math.BigDecimal\r\n<https://github.com/iriscouch/bigdecimal.js>\r\n* ICU4J: com.ibm.icu.math.BigDecimal\r\n<https://github.com/dtrebbien/BigDecimal.js>\r\n\r\nThe BigDecimal in Node\'s npm registry is the GWT version. Despite its seeming popularity I have found it to have some serious bugs, see the Node script *perf/lib/bigdecimal_GWT/bugs.js* for examples of flaws in its *remainder*, *divide* and *compareTo* methods.\r\n\r\n*bigtime.js* is a Node command-line application which tests the performance of big.js against the GWT version of\r\nBigDecimal from the npm registry.\r\n\r\nFor example, to compare the time taken by the big.js `plus` method and the BigDecimal `add` method:\r\n\r\n    $ node bigtime plus 10000 40\r\n\r\nThis will time 10000 calls to each, using operands of up to 40 random digits and will check that the results match.\r\n\r\nFor help:\r\n\r\n    $ node bigtime -h\r\n\r\n## Build\r\n\r\nI.e. minify.\r\n\r\nFor Node, if uglify-js is installed globally ( `npm install uglify-js -g` ) then\r\n\r\n    uglifyjs -o ./big.min.js ./big.js\r\n\r\nwill create *big.min.js*.\r\n\r\nThe *big.min.js* already present was created with *Microsoft Ajax Minifier 5.11*.\r\n\r\n## TypeScript\r\n\r\nThe [DefinitelyTyped](https://github.com/borisyankov/DefinitelyTyped) project has a TypeScript [definitions file](https://github.com/borisyankov/DefinitelyTyped/blob/master/big.js/big.js.d.ts) for big.js.\r\n\r\nThe definitions file can be added to your project via the [big.js.TypeScript.DefinitelyTyped](https://www.nuget.org/packages/big.js.TypeScript.DefinitelyTyped/0.0.1) NuGet package or via [tsd](http://definitelytyped.org/tsd/).\r\n\r\n    tsd query big.js --action install\r\n\r\nAny questions about the TypeScript definitions file should be addressed to the DefinitelyTyped project.\r\n\r\n## Feedback\r\n\r\nFeedback is welcome.\r\n\r\nBugs/comments/questions?\r\nOpen an issue, or email\r\n\r\nMichael\r\n<a href="mailto:M8ch88l@gmail.com">M8ch88l@gmail.com</a>\r\n\r\nBitcoin donation to:\r\n**1DppGRQSjVSMgGxuygDEHQuWEdTiVEzJYG**\r\nThank you\r\n\r\n## Licence\r\n\r\nSee LICENCE.\r\n\r\n## Change Log\r\n\r\n####3.1.3\r\n\r\n* Minor documentation updates.\r\n\r\n####3.1.2\r\n\r\n* README typo.\r\n\r\n####3.1.1\r\n\r\n* API documentation update, including FAQ additions.\r\n\r\n####3.1.0\r\n\r\n* Renamed and exposed `TO_EXP_NEG` and `TO_EXP_POS` as `Big.E_NEG` and\r\n `Big.E_POS`.\r\n\r\n####3.0.2\r\n\r\n* Remove *.npmignore*, use `files` field in *package.json* instead.\r\n\r\n####3.0.1\r\n\r\n* Added `sub`, `add` and `mul` aliases.\r\n* Clean-up after lint.\r\n\r\n####3.0.0\r\n\r\n* 10/12/14 Added [multiple constructor functionality](http://mikemcl.github.io/big.js/#faq).\r\n* No breaking changes or other additions, but a major code reorganisation,\r\n so *v3* seemed appropiate.\r\n\r\n####2.5.2\r\n\r\n* 1/11/14 Added bower.json.\r\n\r\n####2.5.1\r\n\r\n* 8/06/14 Amend README requires.\r\n\r\n####2.5.0\r\n\r\n* 26/01/14 Added `toJSON` method so serialization uses `toString`.\r\n\r\n####2.4.1\r\n\r\n* 17/10/13 Conform signed zero to IEEEE 754 (2008).\r\n\r\n####2.4.0\r\n\r\n* 19/09/13 Throw instances of `Error`.\r\n\r\n####2.3.0\r\n\r\n* 16/09/13 Added `cmp` method.\r\n\r\n####2.2.0\r\n\r\n* 11/07/13 Added \'round up\' mode.\r\n\r\n####2.1.0\r\n\r\n* 26/06/13 Allow e.g. `.1` and `2.`.\r\n\r\n####2.0.0\r\n\r\n* 12/05/13 Added `abs` method and replaced `cmp` with `eq`, `gt`, `gte`, `lt`, and `lte` methods.\r\n\r\n####1.0.1\r\n\r\n* Changed default value of MAX_DP to 1E6\r\n\r\n####1.0.0\r\n\r\n* 7/11/2012 Initial release\r\n',
340 silly resolved     readmeFilename: 'README.md',
340 silly resolved     homepage: 'https://github.com/MikeMcl/big.js',
340 silly resolved     _id: 'big.js@3.1.3',
340 silly resolved     _from: 'big.js@^3.1.3' },
340 silly resolved   { name: 'emojis-list',
340 silly resolved     description: 'Complete list of standard emojis.',
340 silly resolved     homepage: 'https://github.com/Kikobeats/emojis-list',
340 silly resolved     version: '2.0.1',
340 silly resolved     main: './index.js',
340 silly resolved     author:
340 silly resolved      { name: 'Kiko Beats',
340 silly resolved        email: 'josefrancisco.verdu@gmail.com',
340 silly resolved        url: 'https://github.com/Kikobeats' },
340 silly resolved     repository:
340 silly resolved      { type: 'git',
340 silly resolved        url: 'git+https://github.com/kikobeats/emojis-list.git' },
340 silly resolved     bugs: { url: 'https://github.com/Kikobeats/emojis-list/issues' },
340 silly resolved     keywords: [ 'archive', 'complete', 'emoji', 'list', 'standard' ],
340 silly resolved     devDependencies:
340 silly resolved      { acho: 'latest',
340 silly resolved        browserify: 'latest',
340 silly resolved        cheerio: 'latest',
340 silly resolved        got: '>=5 <6',
340 silly resolved        gulp: 'latest',
340 silly resolved        'gulp-header': 'latest',
340 silly resolved        'gulp-uglify': 'latest',
340 silly resolved        'gulp-util': 'latest',
340 silly resolved        standard: 'latest',
340 silly resolved        'vinyl-buffer': 'latest',
340 silly resolved        'vinyl-source-stream': 'latest' },
340 silly resolved     engines: { node: '>= 0.10' },
340 silly resolved     files: [ 'index.js' ],
340 silly resolved     scripts:
340 silly resolved      { pretest: 'standard update.js',
340 silly resolved        test: 'echo \'YOLO\'',
340 silly resolved        update: 'node update' },
340 silly resolved     license: 'MIT',
340 silly resolved     readme: '# emojis-list\n\n[![Dependency status](http://img.shields.io/david/Kikobeats/emojis-list.svg?style=flat-square)](https://david-dm.org/Kikobeats/emojis-list)\n[![Dev Dependencies Status](http://img.shields.io/david/dev/Kikobeats/emojis-list.svg?style=flat-square)](https://david-dm.org/Kikobeats/emojis-list#info=devDependencies)\n[![NPM Status](http://img.shields.io/npm/dm/emojis-list.svg?style=flat-square)](https://www.npmjs.org/package/emojis-list)\n[![Donate](https://img.shields.io/badge/donate-paypal-blue.svg?style=flat-square)](https://paypal.me/kikobeats)\n\n> Complete list of standard Unicode codes that represent emojis.\n\nThe file content all shortcuts declared that you can use for invoke a emoji.\n\n## Install\n\n```bash\nnpm install emojis-list --save\n```\n\nIf you want to use in the browser (powered by [Browserify](http://browserify.org/)):\n\n```bash\nbower install emojis-list --save\n```\n\nand later link in your HTML:\n\n```html\n<script src="bower_components/emojis-list/dist/emojis-list.js"></script>\n```\n\n## Usage\n\n```\nvar emojis = require(\'emojis-list\');\nconsole.log(emojis[0]);\n// => 🀄\n```\n\n## Related\n\n* [emojis-unicode](https://github.com/Kikobeats/emojis-unicode) – Complete list of standard Unicode codes that represent emojis.\n* [emojis-keywords](https://github.com/Kikobeats/emojis-keywords) – Complete list of am emoji shortcuts.\n* [is-emoji-keyword](https://github.com/Kikobeats/is-emoji-keyword) – Check if a word is a emoji shortcut.\n* [is-standard-emoji](https://github.com/kikobeats/is-standard-emoji) – Simply way to check if a emoji is a standard emoji.\n* [trim-emoji](https://github.com/Kikobeats/trim-emoji) – Deletes \':\' from the begin and the end of an emoji shortcut.\n\n## License\n\nMIT © [Kiko Beats](http://www.kikobeats.com)\n',
340 silly resolved     readmeFilename: 'README.md',
340 silly resolved     _id: 'emojis-list@2.0.1',
340 silly resolved     _from: 'emojis-list@^2.0.0' },
340 silly resolved   { name: 'json5',
340 silly resolved     version: '0.5.0',
340 silly resolved     description: 'JSON for the ES5 era.',
340 silly resolved     keywords: [ 'json', 'es5' ],
340 silly resolved     author: { name: 'Aseem Kishore', email: 'aseem.kishore@gmail.com' },
340 silly resolved     contributors: [ [Object], [Object], [Object] ],
340 silly resolved     main: 'lib/json5.js',
340 silly resolved     bin: { json5: 'lib/cli.js' },
340 silly resolved     files: [ 'lib/' ],
340 silly resolved     dependencies: {},
340 silly resolved     devDependencies:
340 silly resolved      { gulp: '^3.9.1',
340 silly resolved        'gulp-jshint': '^2.0.0',
340 silly resolved        jshint: '^2.9.1',
340 silly resolved        'jshint-stylish': '^2.1.0',
340 silly resolved        mocha: '^2.4.5' },
340 silly resolved     scripts:
340 silly resolved      { build: 'node ./lib/cli.js -c package.json5',
340 silly resolved        test: 'mocha --ui exports --reporter spec' },
340 silly resolved     homepage: 'http://json5.org/',
340 silly resolved     license: 'MIT',
340 silly resolved     repository: { type: 'git', url: 'https://github.com/aseemk/json5.git' },
340 silly resolved     readme: '# JSON5 – Modern JSON\n\n[![Build Status](https://travis-ci.org/aseemk/json5.png)](https://travis-ci.org/aseemk/json5)\n\nJSON is an excellent data format, but we think it can be better.\n\n**JSON5 is a proposed extension to JSON** that aims to make it easier for\n*humans to write and maintain* by hand. It does this by adding some minimal\nsyntax features directly from ECMAScript 5.\n\nJSON5 remains a **strict subset of JavaScript**, adds **no new data types**,\nand **works with all existing JSON content**.\n\nJSON5 is *not* an official successor to JSON, and JSON5 content may *not*\nwork with existing JSON parsers. For this reason, JSON5 files use a new .json5\nextension. *(TODO: new MIME type needed too.)*\n\nThe code here is a **reference JavaScript implementation** for both Node.js\nand all browsers. It’s based directly off of Douglas Crockford’s own [JSON\nimplementation][json_parse.js], and it’s both robust and secure.\n\n\n## Why\n\nJSON isn’t the friendliest to *write*. Keys need to be quoted, objects and\narrays can’t have trailing commas, and comments aren’t allowed — even though\nnone of these are the case with regular JavaScript today.\n\nThat was fine when JSON’s goal was to be a great data format, but JSON’s usage\nhas expanded beyond *machines*. JSON is now used for writing [configs][ex1],\n[manifests][ex2], even [tests][ex3] — all by *humans*.\n\n[ex1]: http://plovr.com/docs.html\n[ex2]: https://www.npmjs.org/doc/files/package.json.html\n[ex3]: http://code.google.com/p/fuzztester/wiki/JSONFileFormat\n\nThere are other formats that are human-friendlier, like YAML, but changing\nfrom JSON to a completely different format is undesirable in many cases.\nJSON5’s aim is to remain close to JSON and JavaScript.\n\n\n## Features\n\nThe following is the exact list of additions to JSON’s syntax introduced by\nJSON5. **All of these are optional**, and **all of these come from ES5**.\n\n### Objects\n\n- Object keys can be unquoted if they’re valid [identifiers][mdn_variables].\n  Yes, even reserved keywords (like `default`) are valid unquoted keys in ES5\n  [[§11.1.5](http://es5.github.com/#x11.1.5), [§7.6](http://es5.github.com/#x7.6)].\n  ([More info](https://mathiasbynens.be/notes/javascript-identifiers))\n\n  *(TODO: Unicode characters and escape sequences aren’t yet supported in this\n  implementation.)*\n\n- Objects can have trailing commas.\n\n[mdn_variables]: https://developer.mozilla.org/en/Core_JavaScript_1.5_Guide/Core_Language_Features#Variables\n\n### Arrays\n\n- Arrays can have trailing commas.\n\n### Strings\n\n- Strings can be single-quoted.\n\n- Strings can be split across multiple lines; just prefix each newline with a\n  backslash. [ES5 [§7.8.4](http://es5.github.com/#x7.8.4)]\n\n### Numbers\n\n- Numbers can be hexadecimal (base 16).\n\n- Numbers can begin or end with a (leading or trailing) decimal point.\n\n- Numbers can include `Infinity`, `-Infinity`,  `NaN`, and `-NaN`.\n\n- Numbers can begin with an explicit plus sign.\n\n### Comments\n\n- Both inline (single-line) and block (multi-line) comments are allowed.\n\n\n## Example\n\nThe following is a contrived example, but it illustrates most of the features:\n\n```js\n{\n    foo: \'bar\',\n    while: true,\n\n    this: \'is a \\\nmulti-line string\',\n\n    // this is an inline comment\n    here: \'is another\', // inline comment\n\n    /* this is a block comment\n       that continues on another line */\n\n    hex: 0xDEADbeef,\n    half: .5,\n    delta: +10,\n    to: Infinity,   // and beyond!\n\n    finally: \'a trailing comma\',\n    oh: [\n        "we shouldn\'t forget",\n        \'arrays can have\',\n        \'trailing commas too\',\n    ],\n}\n```\n\nThis implementation’s own [package.json5](package.json5) is more realistic:\n\n```js\n// This file is written in JSON5 syntax, naturally, but npm needs a regular\n// JSON file, so compile via `npm run build`. Be sure to keep both in sync!\n\n{\n    name: \'json5\',\n    version: \'0.5.0\',\n    description: \'JSON for the ES5 era.\',\n    keywords: [\'json\', \'es5\'],\n    author: \'Aseem Kishore <aseem.kishore@gmail.com>\',\n    contributors: [\n        // TODO: Should we remove this section in favor of GitHub\'s list?\n        // https://github.com/aseemk/json5/contributors\n        \'Max Nanasy <max.nanasy@gmail.com>\',\n        \'Andrew Eisenberg <andrew@eisenberg.as>\',\n        \'Jordan Tucker <jordanbtucker@gmail.com>\',\n    ],\n    main: \'lib/json5.js\',\n    bin: \'lib/cli.js\',\n    files: ["lib/"],\n    dependencies: {},\n    devDependencies: {\n        gulp: "^3.9.1",\n        \'gulp-jshint\': "^2.0.0",\n        jshint: "^2.9.1",\n        \'jshint-stylish\': "^2.1.0",\n        mocha: "^2.4.5"\n    },\n    scripts: {\n        build: \'node ./lib/cli.js -c package.json5\',\n        test: \'mocha --ui exports --reporter spec\',\n            // TODO: Would it be better to define these in a mocha.opts file?\n    },\n    homepage: \'http://json5.org/\',\n    license: \'MIT\',\n    repository: {\n        type: \'git\',\n        url: \'https://github.com/aseemk/json5.git\',\n    },\n}\n```\n\n\n## Community\n\nJoin the [Google Group](http://groups.google.com/group/json5) if you’re\ninterested in JSON5 news, updates, and general discussion.\nDon’t worry, it’s very low-traffic.\n\nThe [GitHub wiki](https://github.com/aseemk/json5/wiki) is a good place to track\nJSON5 support and usage. Contribute freely there!\n\n[GitHub Issues](https://github.com/aseemk/json5/issues) is the place to\nformally propose feature requests and report bugs. Questions and general\nfeedback are better directed at the Google Group.\n\n\n## Usage\n\nThis JavaScript implementation of JSON5 simply provides a `JSON5` object just\nlike the native ES5 `JSON` object.\n\nTo use from Node:\n\n```sh\nnpm install json5\n```\n\n```js\nvar JSON5 = require(\'json5\');\n```\n\nTo use in the browser (adds the `JSON5` object to the global namespace):\n\n```html\n<script src="json5.js"></script>\n```\n\nThen in both cases, you can simply replace native `JSON` calls with `JSON5`:\n\n```js\nvar obj = JSON5.parse(\'{unquoted:"key",trailing:"comma",}\');\nvar str = JSON5.stringify(obj);\n```\n\n`JSON5.parse` supports all of the JSON5 features listed above (*TODO: except\nUnicode*), as well as the native [`reviver` argument][json-parse].\n\n[json-parse]: https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/JSON/parse\n\n`JSON5.stringify` mainly avoids quoting keys where possible, but we hope to\nkeep expanding it in the future (e.g. to also output trailing commas).\nIt supports the native [`replacer` and `space` arguments][json-stringify],\nas well. *(TODO: Any implemented `toJSON` methods aren’t used today.)*\n\n[json-stringify]: https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/JSON/stringify\n\n\n### Extras\n\nIf you’re running this on Node, you can also register a JSON5 `require()` hook\nto let you `require()` `.json5` files just like you can `.json` files:\n\n```js\nrequire(\'json5/lib/require\');\nrequire(\'./path/to/foo\');   // tries foo.json5 after foo.js, foo.json, etc.\nrequire(\'./path/to/bar.json5\');\n```\n\nThis module also provides a `json5` executable (requires Node) for converting\nJSON5 files to JSON:\n\n```sh\njson5 -c path/to/foo.json5    # generates path/to/foo.json\n```\n\n\n## Development\n\n```sh\ngit clone git://github.com/aseemk/json5.git\ncd json5\nnpm install\nnpm test\n```\n\nAs the `package.json5` file states, be sure to run `npm run build` on changes\nto `package.json5`, since npm requires `package.json`.\n\nFeel free to [file issues](https://github.com/aseemk/json5/issues) and submit\n[pull requests](https://github.com/aseemk/json5/pulls) — contributions are\nwelcome. If you do submit a pull request, please be sure to add or update the\ntests, and ensure that `npm test` continues to pass.\n\n\n## License\n\nMIT License © 2012-2016 Aseem Kishore, and [others](\nhttps://github.com/aseemk/json5/contributors).\n\n\n## Credits\n\n[Michael Bolin](http://bolinfest.com/) independently arrived at and published\nsome of these same ideas with awesome explanations and detail.\nRecommended reading:\n[Suggested Improvements to JSON](http://bolinfest.com/essays/json.html)\n\n[Douglas Crockford](http://www.crockford.com/) of course designed and built\nJSON, but his state machine diagrams on the [JSON website](http://json.org/),\nas cheesy as it may sound, gave me motivation and confidence that building a\nnew parser to implement these ideas this was within my reach!\nThis code is also modeled directly off of Doug’s open-source [json_parse.js][]\nparser. I’m super grateful for that clean and well-documented code.\n\n[json_parse.js]: https://github.com/douglascrockford/JSON-js/blob/master/json_parse.js\n\n[Max Nanasy](https://github.com/MaxNanasy) has been an early and prolific\nsupporter, contributing multiple patches and ideas. Thanks Max!\n\n[Andrew Eisenberg](https://github.com/aeisenberg) has contributed the\n`stringify` method.\n\n[Jordan Tucker](https://github.com/jordanbtucker) has aligned JSON5 more closely\nwith ES5 and is actively maintaining this project.\n',
340 silly resolved     readmeFilename: 'README.md',
340 silly resolved     bugs: { url: 'https://github.com/aseemk/json5/issues' },
340 silly resolved     _id: 'json5@0.5.0',
340 silly resolved     _from: 'json5@^0.5.0' } ]
341 info install big.js@3.1.3 into /home/supernever/gallery-by-react/gallery-by-react/node_modules/sass-loader/node_modules/loader-utils
342 info install emojis-list@2.0.1 into /home/supernever/gallery-by-react/gallery-by-react/node_modules/sass-loader/node_modules/loader-utils
343 info install json5@0.5.0 into /home/supernever/gallery-by-react/gallery-by-react/node_modules/sass-loader/node_modules/loader-utils
344 info installOne big.js@3.1.3
345 info installOne emojis-list@2.0.1
346 info installOne json5@0.5.0
347 verbose node_modules/sass-loader/node_modules/loader-utils/node_modules/big.js unbuild
348 verbose node_modules/sass-loader/node_modules/loader-utils/node_modules/emojis-list unbuild
349 verbose node_modules/sass-loader/node_modules/loader-utils/node_modules/json5 unbuild
350 verbose tar unpack /home/supernever/.npm/big.js/3.1.3/package.tgz
351 silly lockFile 3f6cc483-loader-utils-node-modules-big-js tar:///home/supernever/gallery-by-react/gallery-by-react/node_modules/sass-loader/node_modules/loader-utils/node_modules/big.js
352 verbose lock tar:///home/supernever/gallery-by-react/gallery-by-react/node_modules/sass-loader/node_modules/loader-utils/node_modules/big.js /home/supernever/.npm/3f6cc483-loader-utils-node-modules-big-js.lock
353 silly lockFile 7d067372-ver-npm-big-js-3-1-3-package-tgz tar:///home/supernever/.npm/big.js/3.1.3/package.tgz
354 verbose lock tar:///home/supernever/.npm/big.js/3.1.3/package.tgz /home/supernever/.npm/7d067372-ver-npm-big-js-3-1-3-package-tgz.lock
355 verbose tar unpack /home/supernever/.npm/emojis-list/2.0.1/package.tgz
356 silly lockFile 067c4784-r-utils-node-modules-emojis-list tar:///home/supernever/gallery-by-react/gallery-by-react/node_modules/sass-loader/node_modules/loader-utils/node_modules/emojis-list
357 verbose lock tar:///home/supernever/gallery-by-react/gallery-by-react/node_modules/sass-loader/node_modules/loader-utils/node_modules/emojis-list /home/supernever/.npm/067c4784-r-utils-node-modules-emojis-list.lock
358 silly lockFile ead533d5-pm-emojis-list-2-0-1-package-tgz tar:///home/supernever/.npm/emojis-list/2.0.1/package.tgz
359 verbose lock tar:///home/supernever/.npm/emojis-list/2.0.1/package.tgz /home/supernever/.npm/ead533d5-pm-emojis-list-2-0-1-package-tgz.lock
360 verbose tar unpack /home/supernever/.npm/json5/0.5.0/package.tgz
361 silly lockFile 753ea16d--loader-utils-node-modules-json5 tar:///home/supernever/gallery-by-react/gallery-by-react/node_modules/sass-loader/node_modules/loader-utils/node_modules/json5
362 verbose lock tar:///home/supernever/gallery-by-react/gallery-by-react/node_modules/sass-loader/node_modules/loader-utils/node_modules/json5 /home/supernever/.npm/753ea16d--loader-utils-node-modules-json5.lock
363 silly lockFile 91e48829-ever-npm-json5-0-5-0-package-tgz tar:///home/supernever/.npm/json5/0.5.0/package.tgz
364 verbose lock tar:///home/supernever/.npm/json5/0.5.0/package.tgz /home/supernever/.npm/91e48829-ever-npm-json5-0-5-0-package-tgz.lock
365 silly gunzTarPerm modes [ '755', '644' ]
366 silly gunzTarPerm modes [ '755', '644' ]
367 silly gunzTarPerm modes [ '755', '644' ]
368 silly gunzTarPerm extractEntry package.json
369 silly gunzTarPerm extractEntry README.md
370 silly gunzTarPerm extractEntry lib/cli.js
371 silly gunzTarPerm extractEntry package.json
372 silly gunzTarPerm extractEntry README.md
373 silly gunzTarPerm extractEntry index.js
374 silly gunzTarPerm extractEntry lib/json5.js
375 silly gunzTarPerm extractEntry lib/require.js
376 silly gunzTarPerm extractEntry package.json
377 silly gunzTarPerm extractEntry README.md
378 silly gunzTarPerm extractEntry big.js
379 silly gunzTarPerm extractEntry big.min.js
380 silly lockFile 067c4784-r-utils-node-modules-emojis-list tar:///home/supernever/gallery-by-react/gallery-by-react/node_modules/sass-loader/node_modules/loader-utils/node_modules/emojis-list
381 silly lockFile 067c4784-r-utils-node-modules-emojis-list tar:///home/supernever/gallery-by-react/gallery-by-react/node_modules/sass-loader/node_modules/loader-utils/node_modules/emojis-list
382 silly lockFile ead533d5-pm-emojis-list-2-0-1-package-tgz tar:///home/supernever/.npm/emojis-list/2.0.1/package.tgz
383 silly lockFile ead533d5-pm-emojis-list-2-0-1-package-tgz tar:///home/supernever/.npm/emojis-list/2.0.1/package.tgz
384 info preinstall emojis-list@2.0.1
385 verbose readDependencies using package.json deps
386 verbose readDependencies using package.json deps
387 silly resolved []
388 verbose about to build /home/supernever/gallery-by-react/gallery-by-react/node_modules/sass-loader/node_modules/loader-utils/node_modules/emojis-list
389 info build /home/supernever/gallery-by-react/gallery-by-react/node_modules/sass-loader/node_modules/loader-utils/node_modules/emojis-list
390 verbose linkStuff [ false,
390 verbose linkStuff   false,
390 verbose linkStuff   false,
390 verbose linkStuff   '/home/supernever/gallery-by-react/gallery-by-react/node_modules/sass-loader/node_modules/loader-utils/node_modules' ]
391 info linkStuff emojis-list@2.0.1
392 verbose linkBins emojis-list@2.0.1
393 verbose linkMans emojis-list@2.0.1
394 verbose rebuildBundles emojis-list@2.0.1
395 info install emojis-list@2.0.1
396 info postinstall emojis-list@2.0.1
397 silly lockFile 753ea16d--loader-utils-node-modules-json5 tar:///home/supernever/gallery-by-react/gallery-by-react/node_modules/sass-loader/node_modules/loader-utils/node_modules/json5
398 silly lockFile 753ea16d--loader-utils-node-modules-json5 tar:///home/supernever/gallery-by-react/gallery-by-react/node_modules/sass-loader/node_modules/loader-utils/node_modules/json5
399 silly lockFile 91e48829-ever-npm-json5-0-5-0-package-tgz tar:///home/supernever/.npm/json5/0.5.0/package.tgz
400 silly lockFile 91e48829-ever-npm-json5-0-5-0-package-tgz tar:///home/supernever/.npm/json5/0.5.0/package.tgz
401 info preinstall json5@0.5.0
402 verbose readDependencies using package.json deps
403 verbose readDependencies using package.json deps
404 silly resolved []
405 verbose about to build /home/supernever/gallery-by-react/gallery-by-react/node_modules/sass-loader/node_modules/loader-utils/node_modules/json5
406 info build /home/supernever/gallery-by-react/gallery-by-react/node_modules/sass-loader/node_modules/loader-utils/node_modules/json5
407 verbose linkStuff [ false,
407 verbose linkStuff   false,
407 verbose linkStuff   false,
407 verbose linkStuff   '/home/supernever/gallery-by-react/gallery-by-react/node_modules/sass-loader/node_modules/loader-utils/node_modules' ]
408 info linkStuff json5@0.5.0
409 verbose linkBins json5@0.5.0
410 verbose link bins [ { json5: 'lib/cli.js' },
410 verbose link bins   '/home/supernever/gallery-by-react/gallery-by-react/node_modules/sass-loader/node_modules/loader-utils/node_modules/.bin',
410 verbose link bins   false ]
411 verbose linkMans json5@0.5.0
412 verbose rebuildBundles json5@0.5.0
413 info install json5@0.5.0
414 info postinstall json5@0.5.0
415 silly lockFile 3f6cc483-loader-utils-node-modules-big-js tar:///home/supernever/gallery-by-react/gallery-by-react/node_modules/sass-loader/node_modules/loader-utils/node_modules/big.js
416 silly lockFile 3f6cc483-loader-utils-node-modules-big-js tar:///home/supernever/gallery-by-react/gallery-by-react/node_modules/sass-loader/node_modules/loader-utils/node_modules/big.js
417 silly lockFile 7d067372-ver-npm-big-js-3-1-3-package-tgz tar:///home/supernever/.npm/big.js/3.1.3/package.tgz
418 silly lockFile 7d067372-ver-npm-big-js-3-1-3-package-tgz tar:///home/supernever/.npm/big.js/3.1.3/package.tgz
419 info preinstall big.js@3.1.3
420 verbose readDependencies using package.json deps
421 verbose readDependencies using package.json deps
422 silly resolved []
423 verbose about to build /home/supernever/gallery-by-react/gallery-by-react/node_modules/sass-loader/node_modules/loader-utils/node_modules/big.js
424 info build /home/supernever/gallery-by-react/gallery-by-react/node_modules/sass-loader/node_modules/loader-utils/node_modules/big.js
425 verbose linkStuff [ false,
425 verbose linkStuff   false,
425 verbose linkStuff   false,
425 verbose linkStuff   '/home/supernever/gallery-by-react/gallery-by-react/node_modules/sass-loader/node_modules/loader-utils/node_modules' ]
426 info linkStuff big.js@3.1.3
427 verbose linkBins big.js@3.1.3
428 verbose linkMans big.js@3.1.3
429 verbose rebuildBundles big.js@3.1.3
430 info install big.js@3.1.3
431 info postinstall big.js@3.1.3
432 verbose about to build /home/supernever/gallery-by-react/gallery-by-react/node_modules/sass-loader/node_modules/loader-utils
433 info build /home/supernever/gallery-by-react/gallery-by-react/node_modules/sass-loader/node_modules/loader-utils
434 verbose linkStuff [ false,
434 verbose linkStuff   false,
434 verbose linkStuff   false,
434 verbose linkStuff   '/home/supernever/gallery-by-react/gallery-by-react/node_modules/sass-loader/node_modules' ]
435 info linkStuff loader-utils@0.2.15
436 verbose linkBins loader-utils@0.2.15
437 verbose linkMans loader-utils@0.2.15
438 verbose rebuildBundles loader-utils@0.2.15
439 verbose rebuildBundles [ '.bin', 'big.js', 'emojis-list', 'json5' ]
440 info install loader-utils@0.2.15
441 info postinstall loader-utils@0.2.15
442 verbose about to build /home/supernever/gallery-by-react/gallery-by-react/node_modules/sass-loader
443 info build /home/supernever/gallery-by-react/gallery-by-react/node_modules/sass-loader
444 verbose linkStuff [ false,
444 verbose linkStuff   false,
444 verbose linkStuff   false,
444 verbose linkStuff   '/home/supernever/gallery-by-react/gallery-by-react/node_modules' ]
445 info linkStuff sass-loader@3.2.0
446 verbose linkBins sass-loader@3.2.0
447 verbose linkMans sass-loader@3.2.0
448 verbose rebuildBundles sass-loader@3.2.0
449 verbose rebuildBundles [ 'async', 'loader-utils', 'object-assign' ]
450 info install sass-loader@3.2.0
451 info postinstall sass-loader@3.2.0
452 verbose readDependencies using package.json deps
453 verbose already installed skipping webpack@^1.12.6 /home/supernever/gallery-by-react/gallery-by-react
454 silly resolved []
455 error peerinvalid The package webpack does not satisfy its siblings' peerDependencies requirements!
455 error peerinvalid Peer grunt-webpack@1.0.11 wants webpack@1.x
455 error peerinvalid Peer sass-loader@3.2.0 wants webpack@^1.12.6
455 error peerinvalid Peer karma-webpack@1.7.0 wants webpack@^1.4.0
455 error peerinvalid Peer webpack-dev-server@1.10.1 wants webpack@^1.3.0
455 error peerinvalid Peer babel-loader@5.4.0 wants webpack@*
456 error System Linux 3.16.0-30-generic
457 error command "/usr/bin/node" "/usr/bin/npm" "install" "--save-dev" "sass-loader"
458 error cwd /home/supernever/gallery-by-react/gallery-by-react
459 error node -v v0.10.37
460 error npm -v 1.4.28
461 error code EPEERINVALID
462 verbose exit [ 1, true ]
